 
 
BỘ GIÁO DỤC VÀ ĐÀO TẠO 
TRƯỜNG ĐẠI HỌC SƯ PHẠM KỸ THUẬT TP. HCM 
KHOA CÔNG NGHỆ THÔNG TIN 
 
MÔN HỌC: CƠ SỞ DỮ LIỆU NÂNG CAO 
 
BÁO CÁO ĐỒ ÁN 
ĐỀ TÀI 
TÌM HIỂU CSDL NOSQL, CÀI ĐẶT MONGODB  
THIẾT KẾ CSDL MONGODB VÀ THAO TÁC 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
TP. Hồ Chí Minh, tháng 04 năm 2024 
GVHD: ThS. Lê Thị Minh Châu 
Mã lớp: ADDB331784_23_2_02 
Nhóm sinh viên thực hiện: Nhóm 1 
1. Nguyễn Thị Lan Anh – 21110368 
2. Huỳnh Nhật Nam – 21110903 
3. Trịnh Thị Thanh Huyền – 21110477 
4. Phan Minh Thuận – 21110667 
 
 
 
LỜI CẢM ƠN 
Lời nói đầu tiên, chúng em xin gửi lời biết ơn sâu sắc và lòng tri ân đến Thạc sĩ 
Lê Thị Minh Châu - người đã dành thời gian và công sức để hỗ trợ, đồng hành cùng 
chúng em trong suốt quá trình nghiên cứu và học tập đề tài này. Từ khi chúng em bắt 
đầu bước vào lĩnh vực học tập này đến hiện tại, sự quan tâm và sự hỗ trợ tận tình từ Cô 
đã giúp chúng em phát triển và hoàn thành đề tài của mình một cách thành công. 
Chúng em xin bày tỏ lòng biết ơn chân thành nhất đến Cô Lê Thị Minh Châu - 
người đã chia sẻ những kiến thức quý báu và cung cấp sự hướng dẫn cần thiết cho chúng 
em trong suốt quá trình học tập. Nhờ vào sự chỉ dạy và hướng dẫn tận tình của Cô mà 
chúng em đã có thể hoàn thiện đề tài nghiên cứu của mình. 
Bài báo cáo về đề tài “TÌM HIỂU CSDL NOSQL, CÀI ĐẶT MONGODB,  
THIẾT KẾ CSDL MONGODB VÀ THAO TÁC” của môn "Cơ Sở Dữ Liệu Nâng Cao" 
đã được chúng em thực hiện trong vòng một tháng. Tuy chúng em còn hạn chế trong 
lượng kiến thức, nhưng chúng em hy vọng nhận được sự đóng góp quý báu từ Cô để bổ 
sung và hoàn thiện kiến thức của mình, từ đó học hỏi thêm kinh nghiệm và nâng cao 
trình độ, chuẩn bị cho tương lai công việc. 
Chúng em xin gửi lời cảm ơn chân thành nhất đến Cô, và chúc Cô luôn vui vẻ, 
giữ lửa nhiệt quyết tâm dành cho nghề, và luôn tràn đầy niềm tin trong cuộc sống. Chúng 
em hy vọng mọi điều tốt lành sẽ đến với Cô, và Cô sẽ tiếp tục đóng góp cho sự nghiệp 
trồng người với sự cao cả và vĩ đại như Cô đã từng làm. 
 
 
 
 
 
 
BẢNG PHÂN CÔNG 
 
STT 
MSSV 
Họ Và Tên 
Nhiệm Vụ 
Hoàn Thành 
1 
21110903 
Huỳnh Nhật Nam 
(Nhóm Trưởng) 
Soạn nội dung phần III: Làm 
việc với MongoDB(cài đặt 
và cấu hình MongoDB, tạo 
lập cơ sở dữ liệu) 
Các thao tác CRUD cơ bản 
Code front end và back end 
các chức năng: 
 - Tài khoản (đăng nhập đăng 
ký , đăng xuất cập nhật thông 
tin tài khoản) 
- Đơn hàng trong quản lý hệ 
thống (xem đơn hàng, xem 
báo cáo đơn hàng) 
- Đơn hàng của người 
dùng(đặt hàng, hủy đơn 
hàng) 
100% 
2 
21110368 
Nguyễn Thị Lan Anh 
Soạn nội dung phần III: Làm 
việc với MongoDB(Thao tác 
với cơ sở dữ liệu ) 
Các thao tác CRUD cơ bản 
Code front end và back end 
các chức năng: Trang chủ ( 
xem sản phẩm, tìm kiếm, 
xem chi tiết sản phẩm, xem 
sản phẩm, xem thêm, xem 
sản phẩm theo loại) 
100% 
3 
21110477 
Trịnh Thị Thanh Huyền 
Soạn nội dung phần I: Giới 
thiệu NoSQL. 
100% 
 
 
Các thao tác CRUD cơ bản 
Code front end và back end 
các chức năng:  Sản phẩm 
trong quản lý hệ thống( thêm 
sản phẩm, tìm kiếm sản 
phẩm, chỉnh sửa sản phẩm, 
xóa sản phẩm, xem list thông 
tin sản phẩm) 
4 
21110667 
Phan Minh Thuận 
Soạn nội dung phần II: Cơ sở 
dữ liệu MongoDB. 
Các thao tác CRUD cơ bản 
Code front end và back end 
các chức năng: Người dùng 
trong quản lý hệ thống (xóa 
thông tin, chỉnh sửa thông 
tin, tìm kiếm người dùng, 
xem list thông tin người 
dùng) 
100% 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
MỤC LỤC 
 
CHƯƠNG 1: GIỚI THIỆU NOSQL ....................................................................... 1 
1.1. Giới thiệu ........................................................................................................ 1 
1.2. Đặc điểm của NoSQL ..................................................................................... 1 
1.3. Phân loại cơ sở dữ liệu NoSQL ...................................................................... 2 
1.3.1. Key-value .................................................................................................. 2 
1.3.2. Document 
.................................................................................................. 2 
1.3.3. Graph 
........................................................................................................ 3 
1.3.4. Column...................................................................................................... 4 
1.4. So sánh cơ sở dữ liệu NoSQL với cơ sở dữ liệu quan hệ 
............................... 4 
CHƯƠNG 2: CƠ SỞ DỮ LIỆU MONGODB ......................................................... 6 
2.1. Giới thiệu ........................................................................................................ 6 
2.2. Mô hình dữ liệu trong MongoDB 
................................................................... 6 
2.3. Kiến trúc của MongoDB................................................................................. 8 
2.4. Các chế độ thực thi MongoDB ....................................................................... 9 
CHƯƠNG 3: LÀM VIỆC VỚI MONGODB......................................................... 10 
3.1. Cài đặt và cấu hình MongoDB 
..................................................................... 10 
3.1.1. Cài đặt 
..................................................................................................... 10 
3.1.2. Cấu hình ................................................................................................. 10 
3.2. Tạo lập cơ sở dữ liệu 
..................................................................................... 19 
3.3. Thao tác với dữ liệu ...................................................................................... 19 
3.3.1. Truy vấn dữ liệu ..................................................................................... 19 
3.3.2. Thêm dữ liệu 
........................................................................................... 21 
3.3.3. Cập nhật dữ liệu ..................................................................................... 22 
3.3.4. Xóa dữ liệu 
.............................................................................................. 25 
CHƯƠNG 4: LÀM VIỆC VỚI MONGODB......................................................... 27 
4.1. Mô tả bài toán 
............................................................................................... 27 
4.2. Mô tả cơ sở dữ liệu, tập dữ liệu (nếu có) ..................................................... 27 
4.3. Các chức năng chính của ứng dụng 
............................................................. 28 
4.4. Hướng dẫn cài đặt ........................................................................................ 29 
4.5. Kết quả 
.......................................................................................................... 29 
 
 
 
 
 
 
1 
 
CHƯƠNG 1: GIỚI THIỆU NOSQL 
1.1. Giới thiệu 
NoSQL là một loại hệ thống quản lý cơ sở dữ liệu khác với cơ sở dữ liệu quan 
hệ truyền thống ở chỗ nó không sử dụng ngôn ngữ truy vấn có cấu trúc (SQL) để thao 
tác dữ liệu. Thay vào đó, cơ sở dữ liệu NoSQL sử dụng các cơ sở dữ liệu phi quan hệ 
có thể xử lý lượng lớn dữ liệu phi cấu trúc và bán cấu trúc, chẳng hạn như documents, 
graphs, và key-value pairs… 
Cơ sở dữ liệu NoSQL ban đầu được phát triển để giải quyết các hạn chế về khả 
năng mở rộng và hiệu suất của cơ sở dữ liệu quan hệ truyền thống, vốn gặp khó khăn 
trong việc xử lý lượng dữ liệu khổng lồ được tạo ra bởi các ứng dụng web hiện đại và 
các hệ thống sử dụng nhiều dữ liệu khác. Cơ sở dữ liệu NoSQL được thiết kế để có khả 
năng mở rộng cao, linh hoạt và có khả năng chịu lỗi cao, khiến chúng trở nên lý tưởng 
để sử dụng trong các hệ thống phân tán quy mô lớn và môi trường điện toán đám mây. 
1.2. Đặc điểm của NoSQL 
Tính linh hoạt của lược đồ: Cơ sở dữ liệu NoSQL được thiết kế để xử lý dữ 
liệu phi cấu trúc và bán cấu trúc, chúng không yêu cầu lược đồ cố định như cơ sở dữ 
liệu quan hệ. Điều này giúp việc thêm dữ liệu mới vào cơ sở dữ liệu dễ dàng hơn mà 
không cần phải sửa đổi lược đồ. 
Khả năng mở rộng: Cơ sở dữ liệu NoSQL có khả năng mở rộng cao, chúng có 
thể xử lý khối lượng dữ liệu lớn và lưu lượng truy cập cao. Nhiều cơ sở dữ liệu NoSQL 
được thiết kế để chạy trên nhiều nút hoặc máy chủ, giúp chúng mở rộng quy mô theo 
chiều ngang. 
Hiệu suất cao: Cơ sở dữ liệu NoSQL được tối ưu hóa về hiệu suất, thường sử 
dụng kiến trúc phân tán và lưu trữ trong bộ nhớ để đạt được tốc độ đọc và ghi nhanh. 
Tính sẵn sàng: Cơ sở dữ liệu NoSQL được thiết kế để có tính sẵn sàng cao, 
người dùng luôn có thể truy cập chúng ngay cả trong trường hợp xảy ra lỗi phần cứng 
hoặc mạng. 
Sao chép: Nhiều cơ sở dữ liệu NoSQL hỗ trợ sao chép dữ liệu, cho phép chúng 
phân phối dữ liệu trên nhiều nút hoặc máy chủ để tăng tính khả dụng và khả năng chịu 
lỗi. 
 
2 
 
Phân mảnh: Cơ sở dữ liệu NoSQL thường hỗ trợ phân mảnh, giúp chúng phân 
vùng dữ liệu trên nhiều máy chủ hoặc nút để cải thiện khả năng mở rộng và hiệu suất. 
Mô hình dữ liệu NoSQL: Cơ sở dữ liệu NoSQL sử dụng nhiều mô hình dữ liệu 
phi quan hệ, chẳng hạn như key-value, document, column-family, và graph.. Mỗi mô 
hình này đều có điểm mạnh và điểm yếu riêng, giúp cơ sở dữ liệu NoSQL có tính linh 
hoạt cao và thích ứng với nhiều trường hợp sử dụng. 
1.3. Phân loại cơ sở dữ liệu NoSQL 
1.3.1. Key-value 
Là một loại cơ sở dữ liệu lưu trữ dữ liệu dưới dạng tập hợp các cặp key-value. 
Trong kiểu lưu trữ dữ liệu này, mỗi mục dữ liệu được xác định bằng một khóa duy nhất 
và giá trị được liên kết với khóa đó có thể là bất kỳ thứ gì, chẳng hạn như chuỗi, số, đối 
tượng hoặc thậm chí là cấu trúc dữ liệu khác. 
 
Các database phổ biến: Redis, Memcached và DynamoDB 
1.3.2. Document 
Một document là một bản ghi trong cơ sở dữ liệu document. Một document 
thường lưu trữ thông tin về một đối tượng và bất kỳ siêu dữ liệu nào liên quan đến nó. 
Document lưu trữ dữ liệu theo cặp trường giá trị. Các giá trị có thể có nhiều 
loại và cấu trúc khác nhau, bao gồm chuỗi, số, ngày tháng, mảng hoặc đối tượng. Tài 
 
3 
 
liệu có thể được lưu trữ ở các định dạng như JSON, BSON và XML.
 
Các database phổ biến: MongoDB, DocumentDB, CouchDB và Cloudant 
1.3.3. Graph 
Cơ sở dữ liệu loại graph lưu trữ các thực thể cũng như mối quan hệ giữa các thực 
thể đó. Thực thể được lưu trữ dưới dạng một nút với mối quan hệ là các cạnh. Một cạnh 
đưa ra mối quan hệ giữa các nút. Mỗi nút và cạnh có một mã định danh duy nhất. 
 
Các database phổ biến: Neo4J và Cosmos DB 
 
4 
 
1.3.4. Column 
Sử dụng một tập hợp các cột để lưu trữ dữ liệu. Các tập hợp cột này được gọi là 
họ cột và người dùng có thể truy vấn trực tiếp các họ cột này mà không cần xem qua tất 
cả các bản ghi dữ liệu. 
 
Các database phổ biến: Cassandra và HBase 
1.4. So sánh cơ sở dữ liệu NoSQL với cơ sở dữ liệu quan hệ 
 
NoSQL 
RDBMS 
Mô hình dữ 
liệu 
Đa dạng kiểu mô hình dữ liệu 
như documents, graphs, và key-
value pairs. Không yêu cầu 
schema cố định và có thể lưu trữ 
dữ liệu có cấu trúc, bán cấu trúc 
hoặc phi cấu trúc. 
Sử dụng mô hình dữ liệu quan hệ, 
trong đó dữ liệu được tổ chức 
thành các bảng có các hàng và cột. 
Các bảng liên kết thông qua khóa 
ngoại. 
Khả năng 
mở rộng 
Thường mở rộng theo chiều 
ngang (horizontal scaling) bằng 
cách thêm các node hoặc server 
Thường mở rộng theo chiều dọc 
(vertical scaling) bằng cách nâng 
cấp phần cứng (tăng CPU, bộ nhớ, 
 
5 
 
mới vào hệ thống. 
…). 
Tính chất 
Linh hoạt về tính nhất quán, có 
thể đánh đổi tính nhất quán để 
đạt được hiệu suất cao hơn. Tính 
linh hoạt, khả năng mở rộng và 
tính sẵn sàng cao được ưu tiên. 
Sử dụng ACID (nguyên tử - 
atomicity, nhất quán - 
consistency, cô lập - isolation, bền 
vững - durability) để đảm bảo tính 
toàn vẹn của giao dịch. 
Linh hoạt 
trong cấu 
trúc dữ liệu 
Linh hoạt hơn trong việc thay đổi 
cấu trúc dữ liệu, có thể sử dụng 
để lưu trữ dữ liệu phân tán. 
Phức tạp trong việc thay đổi cấu 
trúc dữ liệu, không phù hợp cho 
việc lưu trữ phân tán. 
Ứng dụng 
phù hợp 
Thường được dùng trong các dự 
án yêu cầu khả năng mở rộng và 
kiểu lưu trữ dữ liệu đa dạng (có 
cấu trúc, bán hoặc phi cấu trúc); 
xử lý có tính mối quan hệ phức 
tạp như mạng xã hội, phân tích 
dữ liệu lớn, IoT, … 
Thích hợp cho các dự án yêu cầu 
tính toàn vẹn dữ liệu cao như hệ 
thống quản lý giao dịch, quản lý 
ngân hàng, … 
 
 
 
 
6 
 
CHƯƠNG 2: CƠ SỞ DỮ LIỆU MONGODB 
2.1. Giới thiệu 
MongoDB là một hệ quản trị cơ sở dữ liệu mã nguồn mở, thuộc loại NoSQL là 
được sử dụng rỗng rãi hiện nay. 
MongoDB là một dạng database hướng tài liệu hay còn gọi là document, các dữ 
liệu được lưu trữ dưới dạng document kiểu JSON thay vì dưới dạng bảng như là cơ sở 
dữ liệu quan hệ cho nên là việc truy vấn sẽ rất là nhanh. 
Đối với cơ sở dữ liệu quan hệ thì chúng ta có khái niệm như là bảng, các cơ sở 
dữ liệu quan hệ như MySQL hay là SQL Server sẽ sử dụng các bảng để lưu trữ dữ liệu 
thì đối với MongoDB, chúng ta sẽ có khái niệm là collection thay vì là bảng. 
So với cơ sở dữ liệu quan hệ thì trong MongoDB, collection tương ứng với table, 
còn các document thì sẽ ứng với các row, MongoDB sẽ dùng các document này thay 
cho các row trong cơ sở dữ liệu quan hệ. 
Các collection trong MongoDB được cấu trúc rất linh hoạt, cho phép các dữ liệu 
được lưu trữ mà không cần tuân theo một cấu trúc nhất định nào. 
Thông tin liên quan được lưu trữ cùng nhau để truy cập, truy vấn nhanh thông qua ngôn 
ngữ truy vấn MongoDB. 
2.2. Mô hình dữ liệu trong MongoDB 
Có 2 cách mô hình hóa dữ liệu trong MongoDB: 
Embedded documents: Mô hình tài liệu nhúng được biết đến là mô hình hoặc lược đồ 
dữ liệu “không chuẩn hóa”. 
- Một ví dụ cụ thể là một bài đăng trên blog và các bình luận tương ứng của chúng 
là nhúng tài liệu con vào tài liệu cha. Trong ví dụ sau là bài đăng trên blog là tài 
liệu cha và bình luận là tài liệu con. 
- Ưu điểm của mô hình này là có hiệu suất tốt hơn vì chúng ta có thể độc và cập 
nhật dữ liệu trong một hoạt động cơ sở dữ liệu duy nhất. 
- 
Nhược điểm của mô hình này là có thể trùng lặp dữ liệu. 
 
7 
 
 
 
References: Sử dụng mô hình này, chúng ta có thể mô tả mối quan hệ giữa các tài liệu 
bằng cách sử dụng tham chiếu. Điều này cũng được biết đến là mô hình hoặc lược đồ 
dữ liệu “Chuẩn hóa”.  
- Ví dụ về mô hình này: cũng là bài đăng trên blog và các bình luận. Ngoài dữ liệu 
của riêng nó, mỗi tài liệu bình luận cũng chứa một tham chiếu đến bài đăng trên 
blog cha bằng cách sử dụng id của tài liệu bài đăng trên blog cha. 
- Ưu điểm: Không có sự trùng lặp dữ liệu, có thể biểu diễn mối quan hệ phức tạp 
nhiều - nhiều và có thể biểu diễn tập dữ liệu phân cấp. 
- Nhược điểm: Khi cần truy xuất dữ liệu thì cần nhiều thao tác với cơ sở dữ liệu 
hơn hoặc cần tham gia đến nhiều collections. 
 
8 
 
 
2.3. Kiến trúc của MongoDB 
MongoDB sử dụng mô hình dữ liệu NoSQL (không có cấu trúc cố định như trong 
SQL), cho phép lưu trữ và truy vấn dữ liệu dưới dạng JSON. Mô hình này linh hoạt và 
có thể mở rộng, cho phép thay đổi cấu trúc dữ liệu mà không cần phải thay đổi cấu trúc 
của cơ sở dữ liệu. 
  
Một số thuộc tính kiến trúc chính của MongoDB bao gồm: 
- Tài liệu (Documents): Dữ liệu được lưu trữ trong các tài liệu JSON, mỗi tài liệu 
được lưu trữ trong một bản ghi trong một bộ sưu tập. 
- Bộ sưu tập (Collections): Một bộ sưu tập tương tự như một bảng trong cơ sở dữ 
liệu quan hệ, nhưng không có cấu trúc cố định. Nó chứa một tập hợp các tài liệu 
có thể có cấu trúc khác nhau. 
- Cơ sở dữ liệu (Database): MongoDB hỗ trợ nhiều cơ sở dữ liệu, mỗi cơ sở dữ 
liệu có thể chứa nhiều bộ sưu tập. 
- Chỉ mục (Indexes): MongoDB hỗ trợ việc tạo các chỉ mục để tăng tốc độ truy 
vấn dữ liệu. 
 
9 
 
-  Sao chép (Replication): MongoDB hỗ trợ sao chép dữ liệu sang nhiều nút, giúp 
tăng tính sẵn sàng và độ tin cậy của hệ thống. 
- Phân vùng (Sharding): MongoDB cung cấp tính năng phân vùng dữ liệu, cho 
phép phân tán dữ liệu trên nhiều nút, giúp tăng khả năng mở rộng của hệ thống. 
  
Kiến trúc của MongoDB được thiết kế để tối ưu hóa cho các ứng dụng có yêu 
cầu về tính linh hoạt, mở rộng và hiệu suất cao. 
2.4. Các chế độ thực thi MongoDB 
2.4.1. Mongo Shell 
Mongo Shell là một giao diện dòng lệnh cung cấp các công cụ để tương tác trực 
tiếp với cơ sở dữ liệu MongoDB. 
Có thể sử dụng Mongo Shell để thực hiện các thao tác như truy vấn dữ liệu, thêm, 
sửa đổi hoặc xóa các tài liệu, tạo và quản lý các chỉ mục, xem và quản lý dữ liệu, và 
nhiều hơn nữa. Shell được viết bằng JavaScript và cung cấp một loạt các lệnh và hàm 
để thực hiện các thao tác trên cơ sở dữ liệu. 
2.4.2. Admin API  
Admin API là một tập hợp các API RESTful cho phép quản lý các cụm 
MongoDB, cơ sở dữ liệu, bộ sưu tập và người dùng từ xa thông qua HTTP. 
  
Với Admin API có thể thực hiện các thao tác như tạo và quản lý cụm, xem thông 
tin về các cụm và nút, tạo và quản lý người dùng và vai trò, cũng như quản lý bộ sưu 
tập và chỉ mục. 
  
Admin API cung cấp một phương tiện linh hoạt và tự động hóa để quản lý cơ sở 
dữ liệu MongoDB từ xa, điều này rất hữu ích cho việc tự động hóa công việc quản trị 
hệ thống. 
 
 
 
10 
 
 
CHƯƠNG 3: LÀM VIỆC VỚI MONGODB 
3.1. Cài đặt và cấu hình MongoDB  
3.1.1. Cài đặt 
Trước tiên, tiến hành cài đặt MongoDB Community Server và MongoDB Shell bằng 
cách truy cập vào các liên kết sau: 
- MongoDB Community Server: 
https://www.mongodb.com/try/download/community 
- 
MongoDB Shell: https://www.mongodb.com/try/download/shell 
3.1.2. Cấu hình 
3.1.2.1. Cấu Hình MongoDB Compass 
Nhấn “Next”. 
 
 
 
 
11 
 
Tích “I accept the term in the License Agreement” và chọn “Next”. 
 
Nhấn “Complete”. 
 
 
 
 
12 
 
Nhập các thông tin và chọn “Next”. 
 
Chọn “Install”. 
 
 
13 
 
 
Cài đặt thành công 
 
Kết nối với mongoDB server:  Nhấn connect để kết nối mongodb://localhost:27017 
 
14 
 
 
Kết quả: Giao diện chính mongoDB Compass với localhost:27017
 
Tạo database trên mongoDB compass: Nhấn nút icon dấu “+” bên phải chữ 
“Databases”, hộp thoại “Create Database” được mở ra 
- Nhập tên database  
- Nhập tên collection 
 Create Database 
 
15 
 
  
Import data: Sau khi kết nối với MongoDB Server xong, chọn tùy chọn "Import Data" 
và sau đó chọn tập tin dữ liệu muốn import. 
 
 
16 
 
 
Import dữ liệu thành công 
 
3.1.2.2. Cài đặt Mongo Shell 
 
 
 
17 
 
Chọn “Next”. 
 
Điền thông tin và chọn “Next”. 
 
 
 
 
18 
 
Chọn “Install”. 
 
Cài đặt thành công và kiểm tra phiên bản của mongosh 
 
Xem các cơ sở dữ liệu có trên máy: 
 
Sử dụng thành công cơ sở dữ liệu  
 
19 
 
 
 
3.2. Tạo lập cơ sở dữ liệu 
Chọn hoặc tạo cơ sở dữ liệu (Database): Sử dụng lệnh ‘use’ để chọn một cơ sở dữ 
liệu đã tồn tại hoặc để tạo một cơ sở dữ liệu mới.  
Ví dụ: use mydatabase 
 
Trong ví dụ này, nếu mydatabase đã tồn tại, cơ sở dữ liệu này sẽ được chọn. Nếu 
không, cơ sở dữ liệu mydatabase sẽ được tạo mới. 
Tạo hoặc cập nhật các bảng (Collections): Có thể tạo mới hoặc cập nhật các bảng 
trong cơ sở dữ liệu bằng cách sử dụng các lệnh CRUD (Create, Read, Update, Delete) 
trong MongoDB Shell.  
Ví dụ: Để tạo một bảng mới tên “users”, sử dụng lệnh: db.createCollection(“users”) 
 
Sau đó kiểm tra xem tất cả các bảng hiện có trong cơ sở dữ liệu bằng lệnh: show 
collections 
 
3.3. Thao tác với dữ liệu 
3.3.1. Truy vấn dữ liệu 
Để truy vấn dữ liệu trong MongoDB, sử dụng lệnh find() trên collection. 
Ví dụ: Ta có collection “students” trong database “school”. 
Truy vấn tất cả các documents trong collection "students" thì sử dụng lệnh:  
 
20 
 
 
 
 
 
21 
 
Truy vấn documents với điều kiện cụ thể (ví dụ: age lớn hơn 20) thì sử dụng lệnh: 
 
 
3.3.2. Thêm dữ liệu 
Để thêm dữ liệu vào một collection, sử dụng lệnh insertOne() hoặc insertMany(). 
Ví dụ: Chèn một document vào collection "students" sử dụng lệnh: 
 
 
22 
 
 
Ví dụ: Chèn nhiều documents vào collection "students" ta sử dụng lệnh: 
 
 
3.3.3. Cập nhật dữ liệu 
Để cập nhật dữ liệu trong MongoDB, sử dụng lệnh updateOne() hoặc updateMany(). 
Ví dụ: Cập nhật một document trong collection "students" có tên là "John". 
 
 
23 
 
 
 Dữ liệu được cập nhật thành công sử dụng lệnh db.students.find() để truy vấn lại 
thông tin 
 
Ví dụ: Cập nhật nhiều documents trong collection "students" có điều kiện tuổi lớn hơn 
20. 
 
 
24 
 
 
 Dữ liệu được cập nhật thành công 
 
25 
 
 
3.3.4. Xóa dữ liệu 
Để xóa dữ liệu trong MongoDB, sử dụng lệnh deleteOne() hoặc deleteMany(). 
Ví dụ: Xóa một document từ collection "students" có tên là "John" sử dụng lệnh:  
 
 
 
26 
 
Ví dụ: Xóa nhiều documents từ collection "students" có điều kiện tuổi nhỏ hơn 22 sử 
dụng lệnh: 
 
 
 
27 
 
CHƯƠNG 4: LÀM VIỆC VỚI MONGODB 
4.1. Mô tả bài toán 
Bài toán yêu cầu xây dựng một trang web thương mại điện tử tương tự như tiki.vn. 
Trang web này sẽ cung cấp các sản phẩm từ nhiều danh mục khác nhau, cho phép người 
dùng tìm kiếm, xem thông tin chi tiết sản phẩm, thêm sản phẩm vào giỏ hàng và thực 
hiện thanh toán. 
4.2 . Mô tả cơ sở dữ liệu, tập dữ liệu (nếu có) 
Cơ sở dữ liệu Ecommerce bao gồm 3 collection: users, products, orders với mô tả 
các thuộc tính cho các đối tượng khác nhau trong hệ thống: 
- users: 
 
email: Địa chỉ email của người dùng. 
 
password: Mật khẩu của người dùng. 
 
isAdmin: Đánh dấu xem người dùng có quyền quản trị (admin) hay 
không. 
 
createdAt: Thời điểm tạo ra tài khoản người dùng. 
 
updatedAt: Thời điểm cập nhật gần nhất của tài khoản người dùng. 
 
address: Địa chỉ của người dùng. 
 
avatar: Hình đại diện của người dùng. 
 
name: Tên của người dùng. 
 
phone: Số điện thoại của người dùng. 
 
city: Thành phố của người dùng. 
 
- products: 
 
name: Tên sản phẩm. 
 
image: Hình ảnh sản phẩm. 
 
type: Loại sản phẩm. 
 
price: Giá của sản phẩm. 
 
countInStock: Số lượng sản phẩm có sẵn trong kho. 
 
rating: Điểm đánh giá của sản phẩm. 
 
description: Mô tả về sản phẩm. 
 
discount: Mức giảm giá của sản phẩm (nếu có). 
 
createdAt: Thời điểm tạo ra sản phẩm. 
 
updatedAt: Thời điểm cập nhật gần nhất của sản phẩm. 
 
selled: Số lượng sản phẩm đã bán được. 
 
- orders: 
 
orderItems: Các mặt hàng trong đơn hàng. 
 
28 
 
 
Object: Một đối tượng không được xác định cụ thể. 
 
paymentMethod: Phương thức thanh toán của đơn hàng. 
 
shippingPrice: Phí vận chuyển của đơn hàng. 
 
totalPrice: Tổng giá của đơn hàng. 
 
user: Người dùng đặt hàng. 
 
isPaid: Đánh dấu xem đơn hàng đã thanh toán hay chưa. 
 
isDelivered: Đánh dấu xem đơn hàng đã được giao hay chưa. 
 
createdAt: Thời điểm đơn hàng được tạo ra. 
 
updatedAt: Thời điểm cập nhật gần nhất của đơn hàng. 
 
__v: Phiên bản của đối tượng. 
4.3. Các chức năng chính của ứng dụng 
Trang chủ:  
    - Xem sản phẩm  
    - Xem chi tiết sản phẩm 
    - Xem sản phẩm , Xem thêm  
    - Xem sản phẩm theo loại. 
Tài khoản :   
    - Đăng nhập 
    - Đăng ký 
    - Đăng xuất 
    - Cập nhật thông tin tài khoản 
Đơn Hàng:  
    - Đặt hàng 
    - Hủy đơn hàng 
Quản lý hệ thống: 
     -  Người dùng: 
        - Xóa thông tin 
        - Chỉnh sửa thông tin 
        - Tìm kiếm người dùng 
        - Xem danh sách thông tin người dùng 
    -  Sản phẩm:  
        - Thêm Sản phẩm 
        - Tìm kiếm sản phẩm 
        - Chỉnh sửa sản phẩm 
        - Xóa sản phẩm 
        - xem danh sách thông tin sản phẩm 
    - Đơn hàng:  
        - Xem đơn hàng 
        - Xem báo cáo đơn hàng 
 
29 
 
4.4. Hướng dẫn cài đặt 
Bước 1: Đứng tại thư mục C:\ECommerce\server, chạy cmd và gõ lệnh npm start 
 
 
Bước 2: Đứng tại thư mục C:\ECommerce\server, chạy cmd và gõ lệnh npm start 
 
 
Kết quả: Hệ thống chạy trên http://localhost:3000  
4.5. Kết quả 
Sau khi hoàn thành, một trang web thương mại điện tử hoàn chỉnh, cho phép người 
dùng thực hiện các chức năng như tìm kiếm, mua hàng và quản lý tài khoản. 
Trang chủ 
 - Xem sản phẩm 
Code frontend sẽ tiến hành gọi API lấy tất cả sản phẩm với giới hạn là 12. 
 
 
 
 
30 
 
 
 
 
31 
 
Code backend sẽ có API lấy tất cả sản phẩm: 
 
 
32 
 
 
 
Kết quả: 
 
33 
 
 
 
 - Xem chi tiết sản phẩm 
Chọn sản phẩm muốn xem thông tin chi tiết. 
Code frontend sẽ thực hiện gọi API lấy chi tiết sản phẩm: 
 
 
Code backend sẽ có API lấy chi tiết sản phẩm. 
 
34 
 
 
Kết quả: 
 
Click chuột vào sản phẩm đã chọn -> Giao diện chi tiết sản phẩm được hiển thị. 
 
35 
 
 
- Xem thêm 
Nhấn vào nút “Xem thêm” để hiển thị thêm các sản phẩm trên trang chủ. 
Code frontend xử lý “Load more”. Khi click vào nút “Load more” thì limit sẽ tăng lên 
 
 
Sau đó xử lý tương tự như Xem sản phẩm. 
 
36 
 
 
Hiển thị thành công các sản phẩm trên trang chủ. 
 
 - Xem sản phẩm theo loại. 
Chọn các loại sản phẩm được hiển thị trên giao diện. 
Code frontend xử lý lấy sản phẩm theo loại, API là API lấy tất cả sản phẩm nhưng 
truyền thêm tham số type là loại sản phẩm và page để tiến hành phân trang. 
 
 
37 
 
 
Code backend tương tự như “Xem sản phẩm”. 
Kết quả: 
 
 
Click chuột vào loại sản phẩm “Điện Gia Dụng”  để xem danh sách sản phẩm theo 
loại sản phẩm. 
 
 
38 
 
 
Tài khoản 
 - Đăng nhập 
Người dùng tiến hành bấm vào link Tạo tài khoản: 
 
Xử lý chuyển hướng tới trang đăng ký. 
 
Người dùng sau khi điền thông tin tài khoản và bấm đăng ký: 
 
 
 
 
 
39 
 
code BE tiến hành tạo tài khoản: 
 
 
Điền gmail và mật khẩu để đăng nhập. 
 
 
Sau khi đăng nhập thì sẽ chuyển tới trang chủ. 
 
40 
 
 
 - Đăng ký 
Điền các thông tin gmail và mật khẩu để đăng ký. 
 
Sau khi đăng ký thành công sẽ chuyển sang trang đăng nhập để tiến hành đăng nhập. 
 
41 
 
 
Đăng nhập thành công sẽ chuyển qua trang chủ. 
 
- Đăng xuất 
Nhấn nút “Đăng xuất” để đăng xuất. 
 
Sau khi đăng xuất thành công sẽ chuyển qua trang đăng nhập. 
 
42 
 
 
 - Cập nhật thông tin tài khoản 
   Chọn “Thông tin người dùng” để hiển thị trang thông tin người dùng.
 
Điền các thông tin cần cập nhật. 
 
43 
 
 
Đây là kết quả sau khi cập nhật thông tin tài khoản, tên tài khoản đã trở thành “Nhật 
Nam” 
 
- Đơn Hàng 
 - Đặt Hàng 
Chọn mua đơn hàng bằng cách đặt số lượng và nhấn nút “Chọn mua”, sản phẩm sẽ 
được chuyển qua giỏ hàng. 
 
44 
 
 
Nhấn nút “Mua hàng” 
 
Điền thông tin nhận hàng. 
 
45 
 
 
Nhấn nút “Mua hàng”. 
 
Chọn phương thức giao hàng và phương thức thanh toán và nhấn nút “Đặt hàng”. 
 
46 
 
 
 - Hủy Đơn Hàng 
Đây là danh sách đơn hàng ban đầu. 
Nhấn nút “Hủy đơn hàng” vào đơn hàng cần hủy. 
 
Kết quả: Đơn hàng được hủy thành công. 
 
47 
 
 
 
- Quản lý hệ thống: Người dùng 
 - Xóa thông tin 
Danh sách người dùng lúc đầu: 
 
 
Chọn tài khoản và nhấn icon xóa: 
 
48 
 
Sau khi xóa: 
 
 - Chỉnh sửa thông tin: 
Thông tin lúc đầu: 
Thông tin cần chỉnh sửa: 
 
49 
 
 
Thông tin đã cập nhật sau khi chỉnh sửa: 
 
 - Tìm kiếm người dùng 
Nhập địa chỉ Email cần tìm kiếm: 
 
 
50 
 
Kết quả tìm kiếm: 
 
- Xem danh sách thông tin người dùng: 
Bấm vào Người dùng để xem danh sách người dùng: 
 
         
- Quản lý hệ thống: Sản phẩm 
 - Xem danh sách thông tin sản phẩm 
Đây là danh sách sản phẩm có trong hệ thống. 
 
51 
 
 
 
- Thêm sản phẩm 
Nhấn dấu “+” để thêm sản phẩm. 
 
Điền các thông tin sản phẩm và nhấn nút “Submit” 
 
52 
 
 
Kết quả: Sản phẩm được thêm thành công và hiện trong danh sách sản phẩm. 
- Tìm kiếm sản phẩm 
Nhấn icon tìm kiếm và nhập nội dung cần tìm, nhấn nút “Search” 
 
53 
 
 
Kết quả: Tìm kiếm được sản phẩm cần tìm. 
 
 - Chỉnh sửa sản phẩm 
Đây là sản phẩm trước khi chỉnh sửa có giá 53000. 
Nhấn icon chỉnh sửa để chỉnh sửa. 
 
Chỉnh sửa giá sản phẩm thành 105000 và nhấn nút “Apply”. 
 
54 
 
 
Kết quả: Giá của sản phẩm đã được sửa thành 105000. 
 
 - Xóa một sản phẩm 
Đây là sản phẩm trước khi xóa 
Chọn một sản phẩm để xóa là “MacBook Air M2 2022” và nhấn icon xóa. 
Xác nhận xóa bằng cách nhấn nút “OK” 
 
 
Kết quả: Sản phẩm bị xóa thành công và không còn hiện trong danh sách sản phẩm. 
 
55 
 
 
- Xóa nhiều sản phẩm 
Đây là danh sách sản phẩm trước khi xóa. 
Nhấn tích chọn các sản phẩm cần xóa và chọn “Xóa tất cả”. 
 
Kết quả: Xóa thành công các sản phẩm đã tích chọn và không còn hiện trong danh 
sách sản phẩm. 
 
         
 - Quản lý hệ thống: Đơn hàng 
 - Xem đơn hàng 
Giao diện hiển thị danh sách các đơn hàng mà người dùng đã đặt. 
 
56 
 
 
  
- Xem báo cáo đơn hàng 
Giao diện hiển thị sơ đồ đơn hàng: Xanh dương là phần trăm thanh toán bằng tiền 
mặt, màu xanh lá cây là phần trăm thanh toán bằng paypal. 
     
 
  
 
 
 
 
 
 
57 
 
 
TÀI LIỆU THAM KHẢO 
[1] Tutorialspoint, truy cập ngày 19/02/2024, 
https://www.tutorialspoint.com/mongodb/mongodb_overview.html  
[2] Stackjava , “Hướng dẫn cấu hình MongoDB trên Win 10”, truy cập ngày 
19/02/2024, https://stackjava.com/mongodb/huong-dan-cai-dat-cau-hinh-mongodb-
tren-windows-10.html   
[3] Pratibha Kumari J, “What is a NoSQL database?”, truy cập ngày 20/02/2024, 
https://www.linkedin.com/pulse/what-nosql-database-pratibha-kumari-jha 
[4] David Taylor, “NoSQL Tutorial: What is, Types of NoSQL Databases & 
Example”, truy cập ngày 20/02/2024, https://www.guru99.com/nosql-tutorial.html 
[5] Yousaf Khan, “What is data modeling in MongoDB?”, educative, truy cập ngày 
26/4/2024, https://www.educative.io/answers/what-is-data-modeling-in-mongodb  
[6] Swetha Doddamani, “What is MongoDB?”, intellipaat, truy cập ngày 23/02/2024, 
https://intellipaat.com/blog/what-is-mongodb/  
 
 
 
 
