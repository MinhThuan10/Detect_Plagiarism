BỘ GIÁO DỤC VÀ ĐÀO TẠO
TRƯỜNG ĐẠI HỌC SƯ PHẠM KỸ THUẬT TP.HCM 
KHOA ĐIỆN - ĐIỆN TỬ
ĐỒ ÁN TỐT NGHIỆP
NGÀNH CÔNG NGHỆ KỸ THUẬT ĐIỆN TỬ - TRUYỀN THÔNG
ĐIỀU KHIỂN THIẾT BỊ BẰNG
CỬ CHỈ TAY THÔNG QUA XỬ LÝ ẢNH
     
GVHD: TS. NGUYỄN THANH HẢI 
SVTH: NGUYỄN HỮU SÁNG
MSSV: 12141191
SVTH: TỪ THỊ KIM CHI
MSSV: 12141022
Tp. Hồ Chí Minh, tháng 07/2016
SKL 0 0 4 5 1 7
BỘ GIÁO DỤC & ĐÀO TẠO 
TRƯỜNG ĐẠI HỌC SƯ PHẠM KỸ THUẬT TP. HỒ CHÍ MINH 
KHOA ĐIỆN – ĐIỆN TỬ 
BỘ MÔN ĐIỆN TỬ-CÔNG NGHIỆP 
 
                                                      --------------------------------- 
 
 
 
 
 
 
 
 
 
  ĐỒ ÁN TỐT NGHIỆP 
 
NGÀNH CÔNG NGHỆ KỸ THUẬT ĐIỆN TỬ TRUYỀN THÔNG 
 
 ĐỀ TÀI: 
ĐIỀU KHIỂN THIẾT BỊ BẰNG CỬ CHỈ 
TAY THÔNG QUA XỬ LÝ ẢNH 
 
 
                       GVHD: TS. NGUYỄN THANH HẢI 
 
 
SVTH:  NGUYỄN HỮU SÁNG  12141191 
 
 
 
     TỪ THỊ KIM CHI          12141022 
 
 
 
Tp. Hồ Chí Minh – 7/2016 
BỘ GIÁO DỤC & ĐÀO TẠO 
TRƯỜNG ĐẠI HỌC SƯ PHẠM KỸ THUẬT TP. HỒ CHÍ MINH 
KHOA ĐIỆN – ĐIỆN TỬ 
BỘ MÔN ĐIỆN TỬ-CÔNG NGHIỆP 
                                                    --------------------------------- 
 
     ĐỒ ÁN TỐT NGHIỆP 
NGÀNH CÔNG NGHỆ KỸ THUẬT ĐIỆN TỬ 
TRUYỀN THÔNG 
ĐỀ TÀI: 
ĐIỀU KHIỂN THIẾT BỊ BẰNG CỬ 
CHỈ TAY THÔNG QUA XỬ LÝ ẢNH 
 
 
  
            GVHD: TS. NGUYỄN THANH HẢI 
 
 
                      SVTH:  NGUYỄN HỮU SÁNG  12141191 
 
  
 
 
         TỪ THỊ KIM CHI          12141022 
 
  
 
   Lớp:      12141, hệ chính quy 
 
  
 
 
 
  
 
Tp. Hồ Chí Minh - 7/2016 
 
ii 
TRƯỜNG ĐH. SƯ PHẠM KỸ THUẬT           CỘNG HÒA XÃ HỘI CHỦ NGHĨA VIỆT NAM 
              TP. HỒ CHÍ MINH                                         ĐỘC LẬP - TỰ DO - HẠNH PHÚC 
        KHOA ĐIỆN-ĐIỆN TỬ 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP 
 
 
 
NHIỆM VỤ ĐỒ ÁN TỐT NGHIỆP 
 
Họ tên sinh viên: 
Nguyễn Hữu Sáng  
 
MSSV: 12141191 
 
Từ Thị Kim Chi 
 
 
MSSV: 12141022 
Chuyên ngành: 
Điện tử công nghiệp 
Mã ngành: 
D510302 
Hệ đào tạo: 
Đại học chính quy 
Mã hệ: 
1 
Khóa: 
2012 
Lớp: 
12141DT 
 
I. TÊN ĐỀ TÀI:  ĐIỀU KHIỂN THIẾT BỊ BẰNG CỬ CHỈ TAY 
 
 
 
THÔNG QUA XỬ LÝ ẢNH 
II. NHIỆM VỤ  
1. Các số liệu ban đầu: 
 Phạm Ngọc Hương Trà, Đồ án tốt nghiệp “Ứng dụng kỹ thuật nhận dạng ảnh để 
điều khiển thiết bị”, trường ĐH Sư Phạm Kỹ Thuật TpHCM, 2012. 
 Trần Ngọc Thăng, Trần Thành Trung, Đồ án tốt nghiệp “HandGesture”, trường 
ĐH Sư Phạm Kỹ Thuật TpHCM, 2013. 
 Nguyễn Quang Hoa, Giáo Trình “Xử Lý Ảnh”, Học Viện Công Nghệ Bưu Chính 
Viễn Thông, 2006. 
2. Nội dung thực hiện: 
 Thu ảnh từ webcam. 
 Trích xuất màu da của con người dựa vào đặc trưng màu da trong không gian màu 
YCbCr. 
 Xử lý ảnh dùng bộ lọc trung vị và thuật toán tìm trọng tâm của ảnh. 
 Kết nối và giao tiếp thiết bị ngoại vi. 
 Thiết kế mạch điều khiển thông qua chuẩn giao tiếp UART. 
 Chạy thử và chỉnh sửa. 
 Viết báo cáo. 
III. NGÀY GIAO NHIỆM VỤ: 
10/04/2016 
IV. NGÀY HOÀN THÀNH NHIỆM VỤ: 01/07/2016 
V.  HỌ VÀ TÊN CÁN BỘ HƯỚNG DẪN: 
TS. Nguyễn Thanh Hải 
 
 
 
     Tp. HCM, ngày 5 tháng 7 năm 2016 
CÁN BỘ HƯỚNG DẪN 
    BM. ĐIỆN TỬ CÔNG NGHIỆP 
 
 
 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP 
 
iv 
 
LỜI CAM ĐOAN 
Đề tài này là do tôi tự thực hiện dựa vào một số tài liệu trước đó và không sao chép từ 
tài liệu hay công trình đã có trước đó. 
 
 
 
 
 
 
TP.HCM, ngày…tháng…năm 2016 
 
 
 
 
 
 
    Nhóm thực hiện 
 
 
 
 
 
 
  Nguyễn Hữu Sáng 
 
 
 
 
 
 
  Từ Thị Kim Chi 
 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP 
v 
 
LỜI CẢM ƠN 
Để hoàn thành khóa luận này, chúng em xin gởi lời cảm ơn sâu sắc đến Thầy 
Nguyễn Thanh Hải_Trưởng bộ môn Điện Tử Công Nghiệp đã tận tình chỉ bảo, hướng 
dẫn chúng em trong suốt quá trình thực hiện đề tài. 
Chúng em cũng chân thành cảm ơn đến quý thầy cô trong khoa Điện – Điện Tử 
đã tận tình giảng dạy, truyền đạt cho chúng em những kiến thức, góp ý và chia sẻ 
nhiều kinh nghiệm quý báu cho chúng em hoàn thành tốt đề tài. 
Chúng em cũng xin gửi lời cảm ơn đến những anh chị, bạn bè đã tận tình giúp 
đỡ trong thời gian học tập tại trường và suốt quá trình thực hiện đồ án này. 
Cuối cùng, chúng con cũng trân trọng gửi lời cảm ơn đến gia đình và cha mẹ 
luôn là người lo lắng, động viên, quan tâm, hy sinh tất cả vì chúng con, luôn là chỗ 
dựa vững chắc và là động lực để chúng con cố gắng phấn đấu trên con đường học tập 
của mình. 
Xin chân thành cảm ơn! 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
TP.HCM, ngày … tháng … năm 2016 
   Nhóm thực hiện đề tài 
          
 
 
 
 
 
       Nguyễn Hữu Sáng 
  
 
 
 
 
 
       Từ Thị Kim Chi 
 
 
 
 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                              ix 
 
LIỆT KÊ HÌNH VẼ 
Hình                                                                                                          
Trang 
Hình 2.1. Biểu diễn hình học không gian màu RGB .................................................... 
4 
Hình 2.2. Ví dụ về ảnh màu .......................................................................................... 
6 
Hình 2.3. Ví dụ về ảnh xám .......................................................................................... 
6 
Hình 2.4. Ví dụ về ảnh nhị phân ................................................................................... 
7 
Hình 2.5. Đặt mặt nạ vào ảnh và tính giá trị điểm ảnh ngõ ra ...................................... 
8 
Hình 2.6. Tính giá trị điểm ảnh ngõ ra 
.......................................................................... 
8 
Hình 2.7. Cách sắp xếp các phần tử trung vị ................................................................ 
9 
Hình 2.8. Ảnh bị nhiễu muối tiêu trước và sau khi lọc trung vị ................................... 
10 
Hình 2.9. Bộ lọc 3x3 thường dùng 
................................................................................ 
10 
Hình 2.10. Xác định tâm của phần tử cấu trúc 
.............................................................. 
11 
Hình 2.11. Đặt phần tử cấu trúc vào tâm ảnh cần xử lý 
................................................ 
11 
Hình 2.12. Ví dụ về tính toán co ảnh ............................................................................ 
12 
Hình 2.13. Kết quả sau khi co ảnh ................................................................................ 
12 
Hình 2.14. Xác định tâm của phần tử cấu trúc 
.............................................................. 
13 
Hình 2.15. Ví dụ về tính toán giãn ảnh ......................................................................... 
13 
Hình 2.16. Kết quả sau khi giãn ảnh ............................................................................. 
14 
Hình 2.17. Sơ đồ khối hệ thống nhận dạng điều khiển thiết bị 
..................................... 
15 
Hình 2.18. Kết nối webcam với máy tính ..................................................................... 
16 
Hình 2.19. Ảnh được loại bỏ khuôn mặt 
....................................................................... 
17 
Hình 2.20. Kết quả lọc màu da 
...................................................................................... 
17 
Hình 2.21. Kết quả cắt lấy bàn tay ................................................................................ 
18 
Hình 2.22. Tính khoảng cách từ trọng tâm đến biên bàn tay 
........................................ 
18 
 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                            x 
 
Hình 2.23. Thực hiện phép giãn ảnh và kết quả ........................................................... 
19 
Hình 2.24. Kết quả sau cùng của xử lý ảnh .................................................................. 
20 
Hình 2.25. Giao diện hiển thị ảnh và giao tiếp với người dùng 
.................................... 
20 
Hình 2.26: Cổng COM DB-09 ...................................................................................... 
21 
Hình 3.1. Sơ đồ khối mạch giao tiếp điều khiển led ..................................................... 
22 
Hình 3.2. Sơ đồ chân cổng COM DB-09 ...................................................................... 
24 
Hình 3.3. Dạng sóng truyền dữ liệu theo chuẩn RS232 
................................................ 
25 
Hình 3.4. IC Max232 .................................................................................................... 
27 
Hình 3.5. Sơ đồ kết nối giữa cổng COM và IC Max232 .............................................. 
27 
Hình 3.6. Sơ đồ chân vi điều khiển PIC16F887 ........................................................... 
28 
Hình 3.7. Thanh ghi Port A 
........................................................................................... 
29 
Hình 3.8. Thanh ghi Tris A ........................................................................................... 
29 
Hình 3.9. Sơ đồ kết nối vi điều khiển với led đơn ........................................................ 
29 
Hình 3.10. IC ổn áp 7805 .............................................................................................. 
30 
Hình 3.11. Sơ đồ nguyên lý mạch nguồn 
...................................................................... 
31 
Hình 3.12. Sơ đồ nút nhất Reset giao tiếp với PIC16F887 
........................................... 
31 
Hình 3.13. Sơ đồ nguyên lý toàn mạch điều khiển ....................................................... 
32 
Hình 4.1. Mạch in lớp dưới ........................................................................................... 
34 
Hình 4.2. Sơ đồ bố trí linh kiện 
..................................................................................... 
34 
Hình 4.3. Mô hình trong không gian 3 chiều của mạch điều khiển .............................. 
35 
Hình 4.4. Mạch thi công thực tế 
.................................................................................... 
35 
Hình 4.5. Mạch điều khiển được đóng hộp bảo vệ ....................................................... 
36 
Hình 4.6. Hệ thống điều khiển thiết bị bằng cử chỉ tay thông qua xử lý ảnh ............... 
36 
Hình 4.7. Lưu đồ cho toàn hệ thống.............................................................................. 
37 
 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                            xi 
 
Hình 4.8. Lưu đồ giải thuật khối xử lý ảnh 
................................................................... 
37 
Hình 4.9. Lưu đồ chương trình chính mạch điều khiển ................................................ 
38 
Hình 4.10. Lưu đồ ngắt truyền thông nhận dữ liệu 
....................................................... 
38 
Hình 4.11. Biểu tượng Matlab trên màn hình làm việc ................................................ 
39 
Hình 4.12. Cửa sổ làm việc của Matlab ........................................................................ 
39 
Hình 4.13. Cửa sổ soạn thảo code 
................................................................................. 
40 
Hình 4.14. Xuất hiện thông báo lỗi khi code bị sai 
....................................................... 
41 
Hình 4.15. Khởi chạy, liên kết các thành phần trong hệ thống 
..................................... 
41 
Hình 4.16. Chạy mô phỏng hệ thống với ảnh chứa 1 ngón tay 
..................................... 
42 
Hình 4.17. Chạy mô phỏng hệ thống với ảnh chứa 4 ngón tay 
..................................... 
42 
Hình 4.18. Chạy thực tế với ảnh tĩnh ............................................................................ 
43 
Hình 4.19. Chạy thực tế với ảnh thu từ webcam 
........................................................... 
43 
Hình 4.20. Kết nối webcam với máy tính qua cổng USB 
............................................. 
44 
Hình 4.21. Kết nối mạch điều khiển với máy tính ........................................................ 
44 
Hình 4.22. Cửa sổ chọn ảnh cần xử lý .......................................................................... 
46 
Hình 4.23. Ảnh đang chờ xử lý 
..................................................................................... 
46 
Hình 4.24. Kết quả xử lý ảnh đã chọn........................................................................... 
46 
Hình 4.25. Thu ảnh từ webcam 
..................................................................................... 
47 
Hình 4.26. Lưu đồ vận hành hệ thống nhận dạng cử chỉ tay, điều khiển thiết bị ......... 
49 
Hình 5.1. Ảnh trước và sau khi lọc trung vị 
.................................................................. 
57 
Hình 5.2. Hình ảnh thu từ webcam ............................................................................... 
57 
Hình 5.3. Ảnh sau khi được loại bỏ khuôn mặt ............................................................ 
58 
Hình 5.4. Ảnh sau khi lọc màu da 
................................................................................. 
58 
Hình 5.5. Ảnh chỉ chứa vùng da tay.............................................................................. 
58 
 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                            xii 
 
Hình 5.6. Kết quả sau khi cắt lấy bàn tay ..................................................................... 
59 
Hình 5.7. Tính khoảng cách từ trọng tâm đến biên bàn tay .......................................... 
59 
Hình 5.8. Kết quả thu đực sau hai phép giãn ảnh và co ảnh ......................................... 
60 
Hình 5.9. Kết quả cuối cùng sau khi nhận dạng ........................................................... 
60 
Hình 5.10. Minh họa về khoảng cách giữa tay và webcam .......................................... 
61 
Hình 5.11. Kết quả nhận dạng ở khoảng cách xa và gần .............................................. 
61 
Hình 5.12. Minh họa về điều kiện chiếu sáng khác nhau ............................................. 
61 
Hình 5.13. Kết quả nhận dạng ảnh trong điều kiện chiếu sáng khác nhau ................... 
62 
Hình 5.14. minh họa về độ mở giữa các ngón tay ........................................................ 
63 
Hình 5.15. Minh họa về góc chụp của bàn tay 
.............................................................. 
63 
Hình 5.16. Kết quả nhận dạng ảnh về độ mở giữa các ngón tay .................................. 
63 
Hình 5.17. Kết quả nhận dạng các trường hợp góc chụp khác nhau ............................ 
64 
Hình 5.18. Minh họa về ảnh mờ, ảnh có bàn tay bị che khuất bởi khuôn mặt ............. 
65 
Hình 5.19. Kết quả nhận dạng khi bàn tay bị nhòe và bàn tay chạm khuôn mặt 
.......... 
65 
Hình 5.20. Minh họa về độ nhấp nhô của các ngón tay khi co lại ................................ 
66 
Hình 5.21. Kết quả nhận dạng khi hạn chế nhấp nhô của ngón tay 
.............................. 
66 
 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                          xiii 
LIỆT KÊ BẢNG 
Bảng                                                                                                                        Trang 
Bảng 2.1. Thông số kỹ thuật của webcam .................................................................... 
16 
Bảng 4.1. Danh sách linh kiện sử dụng trong mạch điều khiển 
.................................... 
33 
Bảng 4.2. Mô tả các phím chức năng trong giao diện điều khiển 
................................. 
45 
Bảng 4.3. Bảng tra cứu lỗi nhanh của hệ thống ............................................................ 
48 
Bảng 5.1. Kết quả chạy chương trình trong nhận dạng ảnh 
.......................................... 
61 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP 
 xiv 
TÓM TẮT 
Đề tài này sẽ thực hiện điều khiển sáng hoặc tắt 5 đèn LED đơn (Light Emitting 
Diode, có nghĩa là đi-ốt phát quang) thông qua 5 cử chỉ tay của con người thông qua 
xử lý ảnh. Hệ thống gồm có 1 webcam để thu nhận ảnh màu có chứa tay của người 
dùng được kết nối với một máy tính chạy chương trình xử lý. Chương trình xử lý này 
có nhiệm vụ tìm, xác định nơi chứa bàn tay có trong ảnh bằng phương pháp lọc màu 
da và loại trừ các vùng có diện tích nhỏ. Sau đó thực hiện việc khoanh vùng và cắt 
chọn vùng thực sự chứa bàn tay. Tiếp theo, thực hiện lần lượt các phương pháp co ảnh, 
giãn ảnh, trừ ảnh để tìm và gắn nhãn cho các vùng ngón tay. Thông qua việc đếm số 
vùng đã gắn nhãn chương trình sẽ đưa ra kết luận số ngón tay có trong ảnh. Kết quả 
được hiển thị lên màn hình máy tính dạng hình ảnh thông qua giao diện người dùng và 
xuất ra tín hiệu điều khiển để bật/tắt 5 đèn LED trên phần cứng bên ngoài được kết nối 
với chương trình. 
 
 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP  
vi 
MỤC LỤC 
Trang bìa ............................................................................................................ i 
Nhiệm vụ đồ án ................................................................................................. ii 
Lịch trình  ......................................................................................................... iii 
Cam đoan  
......................................................................................................... iv 
Lời cảm ơn ........................................................................................................ v 
Mục lục 
............................................................................................................. vi 
Liệt kê hình vẽ 
.................................................................................................. ix 
Liệt kê bảng 
.................................................................................................... xiii 
Tóm tắt  .......................................................................................................... xiv 
Chương 1. TỔNG QUAN ............................................................................... 1 
1.1.  ĐẶT VẤN ĐỀ 
........................................................................................... 1 
1.2.  MỤC TIÊU 
................................................................................................ 1 
1.3.  NỘI DUNG NGHIÊN CỨU ..................................................................... 2 
1.4.  GIỚI HẠN 
................................................................................................. 2 
1.5.  BỐ CỤC .................................................................................................... 2 
Chương 2. CƠ SỞ LÝ THUYẾT ................................................................... 4 
2.1. NHỮNG VẤN ĐỀ CƠ BẢN TRONG XỬ LÝ ẢNH 
.............................. 4 
2.1.1. Không gian màu RGB, YCbCr ........................................................... 4 
2.1.2. Ảnh màu, ảnh xám và ảnh nhị phân.................................................... 5 
2.1.3. Mặt nạ ................................................................................................. 7 
2.1.4. Bộ lọc trung vị .................................................................................... 9 
2.1.5. Kỹ thuật làm mờ, co và giãn ảnh ...................................................... 10 
2.1.6. Kỹ thuật phân tách màu da................................................................ 14 
2.2. THUẬT TOÁN NHẬN DẠNG CỬ CHỈ BÀN TAY ............................ 14 
2.3. SƠ ĐỒ KHỐI HỆ THỐNG NHẬN DẠNG CỬ CHỈ BÀN TAY 
.......... 15 
 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP  
vii 
2.3.1.   Khối thu ảnh 
.................................................................................... 16 
2.3.2. Khối xử lý ......................................................................................... 16 
2.3.3. Khối hiển thị ảnh 
............................................................................... 20 
2.3.4.  Giao tiếp cổng COM-DB9 ............................................................... 21 
Chương 3. TÍNH TOÁN VÀ THIẾT KẾ 
.................................................... 22 
3.1. GIỚI THIỆU ........................................................................................... 22 
3.2. TÍNH TOÁN VÀ THIẾT KẾ HỆ THỐNG 
............................................ 22 
3.3.1. Thiết kế sơ đồ khối hệ thống 
............................................................. 22 
3.3.2. Tính toán và thiết kế mạch giao tiếp 
................................................. 22 
3.3.3. Sơ đồ nguyên lý của toàn mạch ........................................................ 32 
Chương 4. THI CÔNG HỆ THỐNG 
........................................................... 33 
4.1. GIỚI THIỆU. .......................................................................................... 33 
4.2. THI CÔNG HỆ THỐNG ........................................................................ 33 
4.2.1. Thi công bo mạch. 
............................................................................. 33 
4.2.2. Lắp ráp và kiểm tra ........................................................................... 34 
4.3. ĐÓNG GÓI VÀ THI CÔNG MÔ HÌNH 
................................................ 36 
4.3.1.  
Đóng gói bộ điều khiển 
..................................................................... 36 
4.3.2. Kết nối các thành phần thành một hệ thống hoàn chỉnh 
................... 36 
4.4. LẬP TRÌNH HỆ THỐNG ...................................................................... 37 
4.4.1. Lưu đồ giải thuật ............................................................................... 37 
4.4.2. Phần mềm lập trình cho máy tính ..................................................... 39 
4.5. LẬP TRÌNH MÔ PHỎNG 
...................................................................... 41 
4.5.1. Mô phỏng hệ thống trên máy tính 
..................................................... 41 
4.5.2. Kết quả chạy thực tế ......................................................................... 43 
4.6. VIẾT TÀI LIỆU HƯỚNG DẪN SỬ DỤNG, THAO TÁC ................... 43 
4.6.1. Hướng dẫn sử dụng 
........................................................................... 43 
4.6.2. Quy trình vận hành hệ thống. 
............................................................ 48 
Chương 5. KẾT QUẢ_NHẬN XÉT_ĐÁNH GIÁ 
...................................... 51 
5.1. KẾT QUẢ XỬ LÝ ẢNH ........................................................................ 51 
5.2. ĐÁNH GIÁ HỆ THỐNG 
........................................................................ 54 
5.3. KẾT QUẢ THỐNG KÊ 
.......................................................................... 61 
Chương 6. KẾT LUẬN VÀ HƯỚNG PHÁT TRIỂN 
................................ 63 
 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP  
viii 
6.1. KẾT LUẬN 
............................................................................................. 63 
6.2. HƯỚNG PHÁT TRIỂN 
.......................................................................... 63 
TÀI LIỆU THAM KHẢO ............................................................................ 64 
PHỤ LỤC ....................................................................................................... 65 
CHƯƠNG 1: TỔNG QUAN 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             1 
Chương 1. TỔNG QUAN 
1.1.  ĐẶT VẤN ĐỀ 
Trong thời đại công nghệ thông tin hiện nay, các hệ thống máy móc tự động đã dần 
thay thế con người trong nhiều công đoạn của công việc. Máy móc có khả năng làm việc 
hiệu quả, độ chính xác cao và hữu dụng trong môi trường nguy hại đối với con người, 
tốc độ xử lý của máy tính, thiết bị ngày càng nhanh. Đến nay, việc giao tiếp giữa con 
người và máy móc còn khá thủ công như thông qua bàn phím và các thiết bị nhập dữ 
liệu.  
Trong bài báo “Human Computer Interaction using Hand Gesture” của nhóm tác 
giả Ram Pratap Sharma và Gyanendra K. Verme [1]. Con người mong muốn máy móc 
càng thông minh hơn, tốc độ xử lý nhanh hơn và có thể tương tác với người dùng bằng 
giọng nói là yêu cầu của các thiết bị trong tương lai. Hiện nay trên thế giới các công 
nghệ nhận dạng cử chỉ đã phát triển, các hệ thống ứng dụng nhận dạng cử chỉ đã được 
ứng dụng ở nhiều nơi và độ chính xác của các hệ thống ngày càng được cải thiện. 
Trong bài viết “Novel Algorithm for Image Processing Based Hand Gesture 
Recognition and Its Application in Security” của nhóm nghiên cứu N. Dhruva, Sudhir 
Rao Rupanagudi, H. N. Neelkant Kashyap [2]. Mục đích của bài viết này là nghiên về 
lĩnh vực thị giác máy tính, lĩnh vực hiện đang thu hút rất nhiều sự quan tâm của các nhà 
nghiên cứu xử lý ảnh với mục tiêu xây dựng nên một thế giới trong đó hệ thống thị giác 
kỳ diệu của con người có thể được mô phỏng bởi các hệ thống máy tính, đem lại khả 
năng cảm nhận bằng thị giác cho các hệ thống về môi trường xung quanh. Mơ ước về 
một hệ thống máy tính có thể hoà nhập vào thế giới con người với đầy đủ các giác quan 
trong đó thị giác đóng vai trò quan trọng đang dần dần được hiện thực hoá với những 
đóng góp nghiên cứu của các nhà khoa học trên phạm vi toàn thế giới. 
Hệ thống nhận dạng cử chỉ sẽ có những ứng dụng tuyệt vời trong tất cả các lĩnh 
vực của đời sống. Nếu được áp dụng thành công thì nó sẽ trở thành một cuộc cách mạng 
trong giao tiếp với máy móc, các ứng dụng của nó sẽ bao trùm lên nhiều lĩnh vực như 
giúp đỡ người khuyết tật, công nghiệp, an ninh và giải trí. 
1.2.  MỤC TIÊU 
Mục tiêu của đề tài là hoàn thành việc thiết kế và thi công một hệ thống có thể điều 
khiển các thiết bị bằng cách nhận dạng cử chỉ của những ngón tay thông qua xử lý ảnh. 
CHƯƠNG 1: TỔNG QUAN 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             2 
Để nhận dạng được cử chỉ bàn tay trước hết ta phải trích lọc màu da dựa vào không gian 
màu YCbCr, sau đó đem đi xử lý và đếm những ngón tay, rồi đưa kết quả sau khi đếm 
ngón tay xuống để điều khiển thiết bị ngoại vi thông qua cổng COM DB-09.  
1.3.  NỘI DUNG NGHIÊN CỨU 
Đề tài “Điều khiển thiết bị bằng cử chỉ tay thông qua xử lý ảnh” được thực hiện và 
nghiên cứu với những nội dung sau:  
- Thu ảnh màu từ webcam.  
- Trích xuất màu da của con người dựa vào đặc trưng màu da trong không gian 
màu YCbCr. 
- Xử lý ảnh dùng bộ lọc trung vị và thuật toán tìm trọng tâm của ảnh. 
- Kết nối và giao tiếp thiết bị ngoại vi. 
- Thiết kế mạch điều khiển thông qua chuẩn giao tiếp UART. 
- Chạy thử và chỉnh sửa. 
- Viết báo cáo. 
1.4.  GIỚI HẠN 
 
Nhóm thực hiện nhận dạng 5 cử chỉ bàn tay trên nền màu nhất định (màu xanh). 
Nhận dạng thông qua ảnh tĩnh và ảnh thu vào từ video thông qua Webcam với độ phân 
giải 0.2M. Ảnh xử lý phải đảm bảo các yêu cầu sau: Điều kiện chiếu sáng, khoảng cách, 
góc chụp và độ mở của các ngón tay phải thích hợp, nếu có khuôn mặt thì bàn tay phải 
được tách rời khuôn mặt. 
Nhận dạng 5 cử chỉ bàn tay, xuất tín hiệu điều khiển ứng với mỗi cử chỉ tay và 
dùng tín hiệu đó để điều khiển sáng tắt đèn Led. 
1.5.  BỐ CỤC 
Chương 1: Tổng quan. 
Cung cấp cái nhìn tổng quan về đề tài đang thực hiện, những lý do, tính chất và 
hiệu quả mà đề tài này mang lại. Định hướng ban đầu cho quá trình nghiên cứu, thực 
hiện được chính xác, có hiệu quả. 
Chương 2: Cơ sở lý thuyết. 
Trình bày các lý thuyết có liên quan đến xử lý ảnh: bộ lọc thông thấp, bộ lọc trung 
vị, phương pháp co và giãn ảnh, thuật tìm trọng tâm của vùng ảnh được chọn. 
CHƯƠNG 1: TỔNG QUAN 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             3 
Chương 3: Tính toán thiết kế. 
Đưa ra sơ đồ khối cho toàn mạch, tính toán thiết kế và lựa chọn linh kiện phù hợp 
cho từng khối, sau đó ghép các khối lại và thiết kế sơ đồ nguyên lý, dơ đồ mạch in cho 
toàn mạch. 
Chương 4: Thi công hệ thống. 
Thi công bo mạch điều khiển, lắp ráp và kiểm tra sau đó lập trình hệ thống, đưa 
ra kết quả sau khi mô phỏng. 
Chương 5: Kết quả_Nhận xét_Đánh giá. 
Đánh giá kết quả từng phần thực hiện. Đưa ra hình ảnh kết quả sau từng phần xử 
lý, rút ra nhận xét ưu và nhược điểm của hệ thống. 
Chương 6: Kết luận và hướng phát triển. 
Đưa ra đánh giá khách quan về đề tài: những gì đã đạt được, những gì còn hạn 
chế. Song song với đó đề xuất tính ứng dụng của đề tài vào một ứng dụng có tính khả 
thi trong thực tế. 
 
 
 
 
 
 
CHƯƠNG 2: CƠ SỞ LÝ THUYẾT 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             4 
Chương 2. CƠ SỞ LÝ THUYẾT 
2.1. NHỮNG VẤN ĐỀ CƠ BẢN TRONG XỬ LÝ ẢNH 
2.1.1. Không gian màu RGB, YCbCr 
Không gian màu là những phương pháp định lượng màu sắc được thiết lập công 
thức một cách khoa học. Hệ thống không gian màu cho phép mỗi màu được xác định 
theo số học, bằng cách đó ta có thể chọn và lặp lại những màu nào đó thật chính xác [3]. 
Trên thực tế có rất niều không gian màu khác nhau được mô hình để sử dụng vào những 
mục đích khác nhau. Trong phạm vi của đồ án này, chỉ thực hiện xử lý, chuyển đổi ảnh 
qua lại giữa 2 không gian màu RGB và YCbCr. Do đó các không gian màu khác sẽ 
không được đề cập đến trong đồ án này. 
a.  Không gian màu RGB (Red – Green – Blue). 
RGB là không gian màu rất phổ biến được dùng trong đồ họa máy tính và nhiều 
thiết bị kĩ thuật số khác. Ý tưởng chính của không gian màu này là sự kết hợp của 3 màu 
sắc cơ bản: màu đỏ (R, Red), xanh lục (G, Green) và xanh lơ (B, Blue) để mô tả tất cả 
các màu sắc khác. 
 
 
 
 
 
 
 
 
Nếu như một ảnh số được mã hóa bằng 24bit, nghĩa là 8bit cho kênh R, 8bit cho 
kênh G, 8bit cho kênh B, thì mỗ kênh này màu này sẽ nhận giá trị từ 0 - 255. Với mỗi 
Hình 2.1. Biểu diễn hình học không gian màu RGB 
CHƯƠNG 2: CƠ SỞ LÝ THUYẾT 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             5 
giá trị khác nhau của các kênh màu kết hợp với nhau ta sẽ được một màu khác nhau, 
như vậy ta sẽ có tổng cộng 255x255x255 = 16.581.375 màu sắc. 
Ví dụ: màu đen là sự kết hợp của các kênh màu (R, G, B) với giá trị tương ứng 
(0, 0, 0) màu trắng có giá trị (255, 255, 255), màu vàng có giá trị (255, 255, 0), màu tím 
đậm có giá trị (64, 0, 128). 
b. Không gian màu YCbCr 
Không gian màu YCbCr  được định nghĩa và thường được sử dụng vào mục đích 
nén ảnh màu, xử lý video số. Không gian màu này sẽ phân tách không gian màu RGB 
thành các thành phần độ chói và thành phần màu sắc theo công thức chuyển đổi: 
 
                                                                                                                  
                                                                                                                            
 
Công thức (2.1) là biểu diễn kiểu ma trận hoặc cũng có thể biểu diễn theo kiểu 
tường minh như công thức (2.2) dưới đây: 
 
 
 
2.1.2.  Ảnh màu, ảnh xám và ảnh nhị phân 
a.  Ảnh màu  
 
Ảnh màu là ảnh tổ hợp 3 màu cơ bản: đỏ, lục, lơ như hình 2.2 và thường thu nhận 
trên các dải băng tần khác nhau. Với ảnh màu cách biểu diễn cũng tương tự như ảnh đen 
trắng, chỉ khác là các số tại mỗi phần tử của ma trận biểu diễn cho 3 màu riêng rẽ. Để 
biểu diễn cho một ảnh màu cần 24 bit, 24 bit này được chia thành ba khoảng 8 bit. Mỗi 
màu cũng phân thành L cấp khác nhau (thường L=256). Mỗi khoảng này biểu diễn cho 
cường độ sáng của một trong các màu chính. 
 
 



































B
G
R
Cr
Cb
Y
100
.
0
515
.
0
615
.
0
436
.
0
289
.
0
147
.
0
114
.
0
587
.
0
299
.
0
(2.1) 
Y  = 0.299*R + 0.587*G + 0.114*B 
Cb = - 0.147*R – 0.289*G + 0.436*B 
Cr  = 0.615*R – 0.515*G – 0.100*B 
(2.2) 
CHƯƠNG 2: CƠ SỞ LÝ THUYẾT 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             6 
Mỗi pixel ảnh màu ký hiệu 𝑃
𝑥 :  
                      𝑃
𝑥=[𝑟𝑒𝑑, 𝑔𝑟𝑒𝑒𝑛, 𝑏𝑙𝑢𝑒]𝑇 ,  T: chuyển vị                                      (2.3)                        
 
   
 
 
 
 
 
 
 
 
 
 
b.  Ảnh xám 
 
Giá trị xám nằm trong khoảng 0…255. Như vậy mỗi điểm ảnh trong ảnh xám 
được biểu diễn bởi 1 byte. 
 
 
 
 
  
 
 
 
 
 
c.  Ảnh nhị phân 
 
Giá trị xám của tất cả các điểm trong ảnh chỉ nhận giá trị 1 hoặc 0. Như vậy mỗi 
điểm ảnh trong ảnh nhị phân được biểu diễn bởi 1 bit, xem hình 2.4 bên dưới. 
Hình 2.2. Ví dụ về ảnh màu 
Hình 2.3. Ví dụ về ảnh xám 
CHƯƠNG 2: CƠ SỞ LÝ THUYẾT 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             7 
 
 
 
 
 
 
 
  
 
2.1.3.  Mặt nạ  
a. Khái niệm 
Một vài toán tử dùng trong xử lý ảnh được thực hiện trên giá trị của điểm ảnh và 
các điểm trong vùng lân cận của nó, cùng với một vùng ảnh con cùng kích thước với 
vùng lân cận.Vùng ảnh con này được gọi là mặt nạ. Các giá trị của mặt nạ được gọi là 
hệ số. Kích thước của mặt nạ được ghi như sau (2*M-1, 2*N-1), với cặp M, N là các số 
nguyên dương bất kì ta được một kích thước của mặt nạ. Ví dụ: 3x3, 5x5. 
b. Cách sử dụng 
Đặt tâm của mặt nạ lên trên điểm ảnh cần xử lý, dịch chuyển mặt nạ từ trái qua 
phải, từ trên xuống dưới.Thông qua bộ lọc, trích rút ra các điểm lân cận với điểm ảnh 
cần xử lý, áp dụng hàm của mặt nạ lên giá trị của các điểm ảnh trong vùng lân cận. Đặt 
giá trị điểm ảnh tương ứng trên ảnh đầu ra bằng giá trị trả về bởi hàm của mặt nạ. Lặp 
lại các bước trên lần lượt cho hết các điểm ảnh, những điểm nằm trên biên thì không áp 
dụng. Đối với lọc tuyến tính, kết quả được tính bằng tổng tất cả các phép nhân hệ số của 
mặt nạ với giá trị điểm ảnh tương ứng trong vùng tác động bởi mặt nạ: 
(2.4) 
Với: I(x, y) là ảnh đầu vào. 
 
G(x, y) là ảnh đầu ra. 
 
a(i, j) là mặt nạ lọc. 
Size = m x n  là số phần tử của mặt nạ. 
Hình 2.4. Ví dụ về ảnh nhị phân 





Size
j
i
j
y
i
x
I
j
i
a
y
x
G
,
)
,
(
*
)
,
(
)
,
(
CHƯƠNG 2: CƠ SỞ LÝ THUYẾT 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             8 
 
Giả sử cho một ảnh đầu vào được biểu diễn bởi ma trận I: 
 
Mặt nạ lọc có dạng a: 
 
Đầu tiên, tiến hành xác định kích thước mặt nạ đã cho (ở đây sử dụng mặt nạ 
3x3). Sau đó đặt mặt nạ lên ảnh cần xử lý sao cho trọng tâm – điểm chính giữa của mặt 
nạ trùng với điểm ảnh đang xét.  
 
 
 
 
 
 
 
Tính giá trị tại G(1,1) theo công thức 2.4: 
(2.5) 
 
 
 
 
 
 
 
41 
71 
3 
7 
1 
51 
71 
1 
7 
1 
6 
6 
1 
8 
3 
5 
7 
5 
7 
1 
5 
7 
6 
1 
2 
41 
71 
31 
7 
1 
51 
71 
11 
7 
1 
6 
6 
1 
8 
3 
5 
7 
5 
7 
1 
5 
7 
6 
1 
2 

















2
1
6
7
5
1
7
5
7
5
3
8
1
6
6
1
7
1
7
5
1
7
3
7
4
I











1
1
1
1
1
1
1
1
1
9
1
a
Hình 2.6. Tính giá trị điểm ảnh ngõ ra 
9
23
)
1
*
7
1
*
5
1
*
7
1
*
4
(
9
1
)
1
,
1
(





G
Hình 2.5. Đặt mặt nạ vào ảnh và tính giá trị điểm ảnh ngõ ra 
CHƯƠNG 2: CƠ SỞ LÝ THUYẾT 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             9 
Tính giá trị tại điểm G(1,2): 
(2.6) 
Tương tự như vậy ta tính lần lượt từ trái qua phải, từ trên xuống dưới. Kết quả 
thu được ảnh G: 
 
 
 
2.1.4. Bộ lọc trung vị 
a. Giới thiệu 
Bộ lọc trung vị là bộ lọc làm mượt phi tuyến trong miền không gian, lọc theo 
thống kê thứ tự, nó khá hiệu quả đối với hai loại nhiễu: nhiễu muối tiêu và nhiễu đốm, 
kỹ thuật này là một bước rất phổ biến trong xử lý ảnh. 
Ý nghĩa của thuật toán lọc trung vị như sau: Ta sử dụng một cửa sổ lọc (ma trận 
3x3) quét qua lần lượt các điểm ảnh của ảnh đầu vào. Tại vị trí mỗi điểm ảnh lấy giá trị 
của các điểm ảnh tương ứng trong vùng 3x3 của ảnh gốc lấp vào ma trận lọc. Sau đó 
sắp xếp các điểm ảnh trong của sổ này theo thứ tự (tăng dần hoặc giảm dần tùy ý). Cuối 
cùng gán điểm ảnh nằm chính giữa của dãy giá trị điểm ảnh đã được sắp xếp ở trên cho 
giá trị đang xét của ảnh đầu ra. Trong hình 2.7 là một ví dụ, sau khi sắp xếp các phần tử 
chọn phần tử ở chính giữa mang giá trị là 3 để gán cho ảnh đầu ra. 
 
 
 
 
 
 
 
 
 

















11
22
33
35
24
22
34
48
48
36
27
34
49
43
36
27
31
46
39
35
16
19
31
26
23
9
1
G
9
26
)
1
*
1
1
*
7
1
*
5
1
*
3
1
*
7
1
*
4
(
9
1
)
2
,
1
(







G
Phần tử trung vị 
trước sắp xếp 
Phần tử trung vị 
sau sắp xếp 
Hình 2.7. Cách sắp xếp các phần tử trung vị 
Chọn giá trị 3 
CHƯƠNG 2: CƠ SỞ LÝ THUYẾT 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             10 
Các bước của giải thuật: 
 Quét của sổ lọc lên các thành phần của ảnh gốc, điền các giá trị được quét vào 
cửa sổ lọc. 
 Lấy các thành phần trong của sổ lọc để xử lý. 
 Sắp xếp theo thứ tự các thành phần trong của sổ lọc. 
 Lưu lại thành phần trung vị, gán cho ảnh đầu ra. 
 
 
 
 
 
 
 
 
 
 
 
2.1.5.    Kỹ thuật làm mờ, co và giãn ảnh 
a. Kỹ thuật làm mờ ảnh. 
Loại bỏ những điểm ảnh có giá trị mức xám cao. 
Sử dụng bộ lọc với các hệ số đối xứng nhau qua tâm của bộ lọc, các hệ số ở vị trí 
có khoảng cách gần tâm có giá trị lớn hơn hoặc bằng các hệ số ở vị trí có khoảng cách 
xa tâm. 
Một số bộ lọc thường dùng: 
 
 
 
 
 
Hình 2.9. Bộ lọc 3x3 thường dùng 
Hình 2.8. Ảnh bị nhiễu muối tiêu trước và sau khi lọc trung vị 
CHƯƠNG 2: CƠ SỞ LÝ THUYẾT 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             11 
Kích thước của bộ lọc (2N-1, 2M - 1), ví dụ 3x3, 5x5... 
Đặt tâm của bộ lọc lên điểm ảnh cần xét, không xét những điểm nằm trên biên 
vùng ảnh. 
Tính toán đáp ứng đầu ra của bộ lọc theo công thức sau: 
g(x, y) = (wi*f(xi, yi)) / (wi) với i=1..Size, Size = m x n là kích thước của bộ lọc. 
b. Kỹ thuật co ảnh. 
Mục đích của co ảnh là để thu nhỏ ảnh, loại bỏ cầu nối, loại bỏ phần nhô, phần 
thừa ra. 
Bước 1: Xác định phần tử cấu trúc và tâm của phần tử cấu trúc. 
 
 
 
Theo hình 2.10, điểm chính giữa màu đỏ chính là tâm của phần tử cấu trúc. 
Bước 2: Đặt tâm của phần tử cấu trúc vào điểm ảnh cần xử lý, không xét các 
điểm cáo giá trị bằng 0.  
 
 
 
 
 
 
 
Bước 3: Nếu tất cả các điểm ảnh của phần tử cấu trúc nằm hoàn toàn trong các 
điểm ảnh của ảnh nhị phân, thì điểm tương ứng trên ảnh kết quả sẽ là điểm ảnh (giá trị 
bằng 1). Ngược lại điểm tương ứng trên ảnh kết quả sẽ bằng 0. 
 
Hình 2.11. Đặt phần tử cấu trúc vào ảnh cần xử lý 
Hình 2.10. Xác định tâm của phần tử cấu trúc 
CHƯƠNG 2: CƠ SỞ LÝ THUYẾT 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             12 
 
 
 
 
 
 
 
 
 
 
 
 
 
Hình 2.12 là hai ví dụ khi đặt tâm của phần tử cấu trúc vào ảnh cần xử lý. 
 
 
 
 
 
 
 
Hình 2.13 ở trên mô tả kết quả sau khi co ảnh ta nhận được một ảnh mới được 
thu nhỏ kích cỡ và 3 phàn nhô ra đã được loại bỏ. 
 
Hình 2.13. Kết quả sau khi co ảnh 
Hình 2.12. Ví dụ về tính toán co ảnh 
CHƯƠNG 2: CƠ SỞ LÝ THUYẾT 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             13 
c. Kỹ thuật giãn nở ảnh. 
Bước 1: Xác định phần tử cấu trúc và tâm của phần tử cấu trúc. 
 
 
 
Tương tự như kỹ thuật co ảnh, tâm của phần tử cấu trúc cũng được xác định 
như hình 2.14. 
Bước 2: Đặt tâm vào điểm ảnh cần xử lý, không xét các điểm ảnh có giá trị 0. 
 
 
 
 
 
 
 
 
 
 
 
Bước 3: Thực hiện phép cộng phần tử cấu trúc với ảnh để được kết quả tại điểm 
tương ứng, dịch chuyển tâm của phần tử cấu trúc lần lượt qua từng điểm ảnh trên ảnh 
và lặp lại các bước trên ta sẽ được kết quả như hình 2.16 bên dưới, là một ảnh mới 
được mở rộng hơn về kích cỡ so với ảnh ban đầu đông thời khoảng trống giữa các 
vùng ảnh cũng đã được lắp đầy. 
 
Hình 2.14. Xác định tâm của phần tử cấu trúc 
Hình 2.15. Ví dụ về tính toán giãn ảnh 
CHƯƠNG 2: CƠ SỞ LÝ THUYẾT 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             14 
 
 
 
 
 
 
2.1.6.  Kỹ thuật phân tách màu da 
Da con người có màu rất đặc trưng, có thể dễ dàng nhận dạng và nó cũng không 
bị ảnh hưởng bởi các phép biến đổi hình học đối tượng. Vì vậy, phát hiện bàn tay người 
dựa trên việc phát hiện màu da là một phương pháp đơn giản và có thể thực hiện được. 
Với ảnh được chụp dưới điều kiện ánh sáng phù hợp – có thể phân biệt được màu 
sắc giữa các vật, màu da con người phân bố thành một vùng nhỏ trong không gian màu. 
Để phát hiện điểm ảnh có màu da, ta cần định nghĩa ngưỡng cho các thành phần không 
gian màu. Mỗi thành phần có thể có một hay nhiều giá trị ngưỡng, các điểm ảnh có giá 
trị nằm trong phạm vi xác định của tất cả các thành phần được xem là các điểm ảnh có 
màu da. 
 
Trong không gian màu YCbCr, một điểm ảnh được xem là màu da khi các giá trị 
Cb, Cr tại điểm ảnh đó thỏa mãn các đoạn tương ứng [77; 127] và [133; 173] [4]. 
2.2. THUẬT TOÁN NHẬN DẠNG CỬ CHỈ BÀN TAY 
Để có thể nắm rõ hơn về bài toán nhận dạng cử chỉ bàn tay, trước hết ta tìm hiểu 
định nghĩa cử chỉ tay? Thật khó để giải quyết với một định nghĩa cụ thể thế nào của cử 
chỉ, do có nhiều ứng dụng đề xuất và mỗi ứng dụng chỉ có thể xác định trên một miền 
cụ thể của cử chỉ. Trong luận văn này, cử chỉ được định nghĩa như một sự chuyển động 
của những ngón tay như một tín hiệu đặc biệt, để liên lạc chính xác giữa người gửi và 
thiết bị nhận. 
Hiện nay có nhiều giải thuật hỗ trợ việc phát hiện và trích xuất cử chỉ bàn tay 
trong một ảnh chụp. Sau khi đã phân tách màu da trong một không gian màu nhất định, 
qua một số khâu trung gian, ảnh sẽ được biến đổi về ảnh nhị phân. Lúc này có thể dùng 
Hình 2.16. Kết quả sau khi giãn ảnh 
CHƯƠNG 2: CƠ SỞ LÝ THUYẾT 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             15 
kỹ thuật sử dụng mạng nơ-ron, kỹ thuật SVM (Suport Vector Machine) hoặc kỹ thuật 
Boosting và mô hình Cascade để nhận dạng cử chỉ của bàn tay [5]. 
Kỹ thuật mạng nơ-ron nhân tạo là kỹ thuật mô phỏng tinh vi, có thể mô phỏng 
các hàm cực kỳ phức tạp và có tính học theo các ví dụ. Mạng được huấn luyện từ các số 
liệu có sẵn và có khả năng tự điều chỉnh khi số liệu đầu vào bị mất, mạng có độ tính 
toán rất cao phù hợp với lĩnh vực nhận dạng và điều khiển. 
SVM (Suport Vector Machine) là kỹ thuật mới đối với việc phân lớp dữ liệu, là 
phương pháp học sử dụng không gian giả thuyết các hàm tuyến tính trên không gian đặc 
trưng nhiều chiều, dựa trên lý thuyết tối ưu và lý thuyết thống kê. Là một phương pháp 
có tính tổng quát cao, có thể áp dụng cho nhiều loại bài toán nhận dạng và phân loại. 
Kỹ thuật Boosting và mô hình Cascade, đây là phương pháp đạt được hiệu quả 
cao cả về độ chính xác và tốc độ nhận dạng. Kỹ thuật này phản ánh tốt thông tin về đối 
tượng, loại bỏ các đối tượng đơn giản ngay từ đầu, xử lý nhanh giúp nâng cao tỉ lệ nhận 
dạng. 
2.3. SƠ ĐỒ KHỐI HỆ THỐNG NHẬN DẠNG CỬ CHỈ BÀN TAY 
 
 
 
 
 
 
 
 
 
 
Khối thu ảnh: Lấy ảnh trong hệ thống và ảnh từ môi trường để đưa vào khối xử lý. 
Khối xử lý: Xử lý, nhận diện bàn tay. 
Khối hiển thị: Hiển thị ảnh sau khi nhận dạng ra giao diện. 
Giao tiếp cổng COM: Truyền dữ liệu xuống vi điều khiển để điều khiển đèn. 
 
WEBCAM 
MÁY TÍNH 
MÀN HÌNH 
MÁY TÍNH 
Hình 2.17. Sơ đồ khối hệ thống nhận dạng cử chỉ bàn tay 
GIAO TIẾP 
CỔNG COM 
NGUỒN 
PIC16F887 
CHƯƠNG 2: CƠ SỞ LÝ THUYẾT 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             16 
2.3.1.   Khối thu ảnh 
 
 
 
 
 
 
 
 
 
Khối thu ảnh có nhiệm vụ thu ảnh từ môi trường hoặc lấy ảnh từ hệ thống để đưa 
vào khối xử lý. 
 
 
 
2.3.2.   Khối xử lý 
Ảnh sau khi được thu vào sẽ được thu nhỏ cỡ ảnh xuống còn một nửa kích thước 
ban đầu nhằm mục đích tăng tốc độ xử lý của chương trình. Sau đó ảnh được mang đi 
nhận diện khuôn mặt nhờ vào công cụ Computer Vision Toolbox có sẵn trên phần mềm 
Matlab 2013. Việc nhận diện không mặt trong ảnh đầu vào nhằm mục đích xóa bỏ khuôn 
mặt (nếu có), đây là một phần của giải thuật dùng để tách bàn tay ra khỏi ảnh được sử 
dụng. Có 2 trường hợp xảy ra: 
 Trường hợp 1: Không tìm thấy khuôn mặt người trong ảnh. Chương trình sẽ 
chuyển ảnh sang bước tiếp theo để xử lý tiếp. 
 Trường hợp 2: Phát hiện có khuôn mặt người trong ảnh. Khí đó chương trình sẽ 
dựa vào kết quả trả về của vị trí và điện tích khuôn mặt để tô đen phần diện tích 
Độ phân giải ảnh 
0.2MP 
Độ phân giải video 
640x480 
Giao tiếp với máy tính 
USB 2.0 
Nguồn cung cấp 
USB 
Hình 2.18. Kết nối webcam với máy tính 
Bảng 2.1. Thông số kỹ thuật của webcam 
CHƯƠNG 2: CƠ SỞ LÝ THUYẾT 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             17 
được đánh dấu là khuôn mặt, áp dụng cho tất cả các khuôn mặt có thể tìm thấy 
trong ảnh (hình 2.19). Sau đó chuyển ảnh sang bước tiếp theo. 
 
 
 
 
 
 
 
Sau khi đã được loại bỏ khuôn mặt có trong ảnh, ảnh sẽ được chuyển đổi sang 
không gian màu YCbCr để phân tách màu da. Kết quả của quá trình này ta sẽ được một 
ảnh nhị phân chỉ chứa những vùng được xem là màu da – những điểm ảnh màu trắng. 
Tuy nhiên trong ảnh có thể có nhiều vùng không phải là màu da thật sự do một số đồ 
vật có màu gần giống với màu da người cũng bị giữ lại trong quá trình trích lọc màu da. 
Kết quả là ảnh có nhiều điểm hoặc vùng rời rạc được giữ lại như hình 2.20.a. Chú ý: 
Ảnh hiển thị ở hình 2.20 là ảnh màu từ ảnh gốc đã qua tách lấy màu da. 
 
 
 
 
 
 
 
Giải pháp được đưa ra để khắc phục vấn đề loại bỏ các vùng không mong muốn 
xuất hiện trong ảnh và thu được chính xác vùng chứa bàn tay là tính tổng diện tích các 
Hình 2.19. Ảnh được loại bỏ khuôn mặt 
a. Ảnh sau khi lọc màu da 
b. Ảnh chỉ chứa vùng bàn tay 
Hình 2.20. Kết quả lọc màu da 
CHƯƠNG 2: CƠ SỞ LÝ THUYẾT 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             18 
điểm ảnh là màu da trong ảnh. Từ kết quả thu được ta chỉ giữ lại vùng nào chứa tổng 
diện tích điểm ảnh lớn nhất và xem đó là vùng chứa bàn tay (xem hình 2.20.b).  
 
 
 
 
 
 
 
Công việc tiếp theo cần thực hiện là việc phát hiện và cắt vùng ảnh chỉ chứa bàn 
tay thật sự trong ảnh đã qua xử lý ở trên. Vì ảnh khi thu vào có thể có một phần cánh 
tay của người sử dụng, do đó cần loại bỏ đi phần cánh tay này để việc nhận dạng về sau 
được chuẩn xác. Kết quả ta được một ảnh chứa bàn tay tính từ cổ tay đến các ngón tay 
như hình 2.21. 
 
 
 
 
 
 
 
 
Từ ảnh trên, tiến hành tìm trọng tâm của bàn tay như hình 2.22. Khi đã có được 
trọng tâm của bàn tay, ta đi tìm khoảng cách ngắn nhất từ trọng tâm đó đến đường biên 
của bàn tay. Khoảng cách được tính theo công thức (2.7):  
(Cx, Cy) 
x 
y 
O 
(x,y) 
Hình 2.22. Tính khoảng cách từ trọng tâm đến biên bàn tay 
Hình 2.21. Kết quả cắt lấy bàn tay 
CHƯƠNG 2: CƠ SỞ LÝ THUYẾT 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             19 
 
                               (2.7) 
 
Trong đó: 
D: khoảng cách 
Cx: tọa độ theo phương x của điểm trọng tâm. 
Cy: tọa độ theo phương y của điểm trọng tâm. 
x, y: lần lượt là tọa độ tại điểm cần tính khoảng cách.  
 
Việc tính toán giá trị khoảng cách để dựa vào đó tìm ra kích thước phù hợp của 
mặt nạ khi áp dụng các bộ lọc trên ảnh. Mỗi ảnh mang đi xử lý có những đặc điểm khác 
nhau, không thể áp dụng duy nhất một kích thước nhất định cho mặt nạ lọc mà phải linh 
động thay đổi cho phù hợp với ảnh đầu vào. 
Sau đó tiến hành phép mở ảnh bằng cách thực hiện liên tiếp 2 phép co ảnh và 
giãn ảnh để loại bỏ các phần nhô ra nhưng vẫn giữ được cấu trúc, kích thước vùng ảnh. 
Hình 2.23 mô tả ảnh đã được thực hiện liên tiếp 2 phép co ảnh và giãn ảnh, có thể thấy 
các phần nhô ra (các ngón tay) đã bị loại bỏ chỉ giữ lại vùng lòng bàn tay. 
 
 
 
 
 
 
Công đoạn sau cùng là lấy ảnh chỉ chứa bàn tay trừ đi ảnh đã qua phép mở ảnh 
để tìm lại các vùng nhô ra so với ảnh đã co giãn, các vùng này sẽ chứa các ngón tay và 
cả những vùng nhấp nhô do sự sai khác giữa 2 ảnh trong quá trình xử lý. 
 
Hình 2.24.a cho thấy ảnh sau khi trừ nhau sẽ có nhiều những vùng không phải 
ngón tay xuất hiện trong ảnh. Có nhiều cách để loại bỏ những vùng thừa này và cách 
làm được chọn trong chương trình là cách đã thực hiện trước đó: Tính tổng điện tích các 
điểm ảnh màu trắng, chỉ giữ lại những vùng có tổng diện tích lớn hơn 10% của tổng này. 
2
2
)
(
)
(
y
Cy
x
Cx
D




Hình 2.23. Thực hiện phép giãn ảnh và kết quả 
CHƯƠNG 2: CƠ SỞ LÝ THUYẾT 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             20 
Khi đó các điểm chấm, vùng trắng nhỏ sẽ bị xóa sạch khỏi ảnh và thu được một ảnh chỉ 
chứa các vùng ngón tay như hình 2.24.b. Việc tìm và đếm có bao nhiêu vùng phân biệt 
trong ảnh sẽ giúp chúng ta biết được có bao nhiêu ngón tay. Ví dụ trong hình 2.24.b là 
5 ngón tay. 
 
 
 
 
 
 
 
2.3.3.   Khối hiển thị ảnh 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Ảnh lấy từ đầu vào và ảnh sau khi qua xử lý sẽ được hiển thị trên giao diện như 
hình 2.25 ở trên, để người dùng dễ dàng quan sát và điều khiển. 
Giao diện có 4 phần chính: 
Hình 2.24. Kết quả sau cùng của xử lý ảnh 
a. Ảnh sau khi trừ 
b. Ảnh chỉ chứa 
các vùng ngón tay 
Hình 2.25. Giao diện hiển thị ảnh và giao tiếp với người dùng 
CHƯƠNG 2: CƠ SỞ LÝ THUYẾT 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             21 
 Vùng hiển thị hình ảnh: Hiển thị ảnh cần xử lý, ảnh đã xử lý. 
 Vùng hiển thị tín hiệu ngõ ra: Một trong các led sẽ sáng ứng với tín hiệu ở ngõ 
ra đó được kích hoạt. 
 Vùng xử lý: Chứa các nút bấm cho phép thực thi chương trình ứng với các chức 
năng nhất định. 
 Vùng giao tiếp: Cho biết một số thông tin về kết nối giao tiếp. 
2.3.4.  Giao tiếp cổng COM-DB9 
 
 
 
 
 
Cổng nối tiếp có đặc tính hoạt động song công (thu và phát đồng thời), việc truyền 
dữ liệu qua cổng COM được tiến hành theo hai cách nối tiếp, nghĩa là các bit dữ liệu 
được truyền đi nối tiếp nhau trên một đường dẫn. Phương thức truyền truyền dữ liệu này 
có khả năng dùng cho những ứng dụng có yêu cầu truyền dữ liệu trên khoảng cách lớn 
bởi vì các khả năng gây nhiễu là nhỏ hơn nhiều so với việc truyền dữ liệu qua cổng song 
công. 
Cổng COM là một hệ thống cho phép dễ dàng tạo liên kết dưới hình thức điểm 
điểm giữa hai thiết bị cần trao đổi thông tin với nhau, một thành viên thứ ba không thể 
tham gia vào việc trao đổi thông tin này. Trên thực tế có hai loại cổng COM: loại 9 chân 
và 25 chân, trong đề tài này chỉ sử dụng cổng 9 chân, chúng ta sẽ tìm hiểu cổng COM 
này ở chương 3.
Hình 2.26. Cổng COM DB-09 
CHƯƠNG 3: TÍNH TOÁN VÀ THIẾT KẾ 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             22 
Chương 3. TÍNH TOÁN VÀ THIẾT KẾ 
3.1. GIỚI THIỆU 
 
Hệ thống này xây dựng mô hình điều khiển thiết bị bằng những cử chỉ tay đơn 
giản. Mô hình này gồm webcam kết nối với máy tính để thu ảnh từ môi trường bên ngoài 
hoặc chọn ảnh có sẵn từ thư viện của máy tính, sau đó dùng công cụ Matlab để xử lý 
ảnh vừa thu được rồi xuất kết quả xuống mạch giao tiếp để điều khiển thiết bị thông qua 
cổng COM DB-09. 
3.2. TÍNH TOÁN VÀ THIẾT KẾ HỆ THỐNG 
3.3.1. Thiết kế sơ đồ khối hệ thống 
 
Hệ thống điều khiển thiết bị bằng cử chỉ tay thông qua xử lý ảnh, được thiết kế 
bao gồm các khối sau: 
 
 
 
 
 
 
 
 
 
Khối giao tiếp: Giao tiếp, lấy tín hiệu từ phần mềm chạy trên máy tính đưa vào vi 
điều khiển PIC16F887. 
 
PIC 16F887: Nhận tín hiệu, xử lý và điều khiển bật/tắt đèn LED. 
 
Khối đèn LED: Sáng/tắt theo tín hiệu điều khiển, cho biết ngõ ra nào đang hoạt 
động. 
 
Khối nguồn: Cấp nguồn cho toàn bộ hệ thống hoạt động. 
3.3.2. Tính toán và thiết kế mạch giao tiếp 
a. Khối giao tiếp 
 Chuẩn giao tiếp RS232 
 Đặt vấn đề 
 
Vấn đề giao tiếp giữa máy tính và vi điều khiển rất quan trọng trong các ứng dụng 
điều khiển, đo lường,…Ghép nối qua cổng nối tiếp RS232 là một trong những kỹ thuật 
KHỐI  
GIAO TIẾP 
PIC 16F887 
ĐÈN LED  
KHỐI NGUỒN 
Hình 3.1. Sơ đồ khối mạch giao tiếp điều khiển led 
CHƯƠNG 3: TÍNH TOÁN VÀ THIẾT KẾ 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             23 
được sử dụng rộng rãi để ghép nối các thiết bị ngoại vi với máy tính. Nó là một chuẩn 
giao tiếp nối tiếp dùng định dạng không đồng bộ, kết nối nhiều nhất là 2 thiết bị, chiều 
dài kết nối lớn nhất cho phép để đảm bảo dữ liệu là 12.5 đến 25.4m, tốc độ 20kbit/s đôi 
khi 115kbit/s với một số thiết bị đặc biệt. ý nghĩa của chuẩn truyền thông nối tiếp nghĩa 
là trong một thời điểm chỉ có một bit được gửi đi dọc theo đường truyền. 
 
Có hai phiên bản RS232 được lưu hành trong thời gian tương đối dài là RS232B 
và RS232C. Nhưng cho đến nay thì phiên bản RS232B cũ thì ít được dùng còn RS232C 
hiện vẫn được dùng và tồn taị thường được gọi ngắn gọn lag RS232. Các máy tính 
thường có một hoặc hai cổng nối tiếp theo chuẩn RS232 được gọi là cổng COM. Trên 
máy tính có loại 9 chân hoặc 25 chân tùy vào đời máy và của máy tính. Việc thiết kế 
giao tiếp với cổng RS232 cũng tương đối dễ dàng, đặc biệt khi chọn chế độ hoạt động 
là không đồng bộ và tốc độ truyền dữ liệu thấp.  
 Ưu điểm của giao diện nối tiếp RS232 
 Khả năng chống nhiễu của các cổng nối tiếp cao. 
 Thiết bị ngoại vi có thể tháo lắp ngay khi máy tính đang được cấp điện. 
 Các mạch điện đơn giản có thể nhận được điện áp nguồn nuôi qua cổng nối 
tiếp. 
 Những đặc điểm lưu ý trong chuẩn RS232 
 Trong chuẩn RS232 có mức giới hạn trên và dưới (logic 0 và 1) là ±12V. 
Hiện nay đang được cố định trở kháng tải trong phạm vi từ 3000 ohm-7000 
ohm. 
 Mức logic 1 có điện áp nằm trong khoảng -3V đến -12V, mức logic 0 từ +3V 
đến +12V. 
 Tốc độ truyền nhận dữ liệu cực đại là 100kbps. 
 Các lối vào phải có điện trở lớn hơn 3000 ohm nhưng phải nhỏ hơn 7000 ohm. 
 Độ dài của cáp nối giữa máy tính và thiết bị ngoại vi ghép nối qua cổng nối 
tiếp RS232 không vượt quá 15m. 
 Các giá trị tốc độ truyền dữ liệu chuẩn: 50, 75,…, 1200, 2400,…, 115200 bps. 
 Các mức điện áp đường truyền 
 
 RS232 sử dụng phương thức truyền thông không đối xứng, tức là sử dụng tín 
hiệu điện áp chênh lệch giữa một dây dẫn và đất. Do đó ngay từ đầu tiên ra đời nó đã 
CHƯƠNG 3: TÍNH TOÁN VÀ THIẾT KẾ 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             24 
mang vẻ lỗi thời của chuẩn TTL (Transistor- transistor logic), nó vẫn sử dụng các mức 
tương thích TTL để mô tả các mức logic 0 và 1.  
 
Các mức điện áp trong phạm vi từ -3V đến 3V là trạng thái chuyển tuyến. Chính 
vì từ -3V đến 3V là phạm vi không được định nghĩa, trong trường hợp thay đổi giá trị 
logic từ thấp lên cao hoặc từ cao xuống thấp, một tín hiệu phải vượt qua quãng quá độ 
trong một thời gian ngắn hợp lý. Điều này dẫn đến việc phải han chế về điện dung của 
các thiết bị tham gia và của cả đường truyền. Tốc độ truyền dẫn tối đa phụ thuộc vào 
chiều dài của dây dẫn. Đa số các hệ thống hiện nay chỉ hỗ trợ với tốc độ 19,2Kbps. 
 Cổng RS232 trên máy  tính 
 
Hầu hết các máy tính cá nhân hiện nay đều được trang bị ít nhất 1 cổng Com hay 
cổng nối tiếp RS232. Số lượng cổng Com có thể lên tới 4 tùy từng lạo main máy tính. 
Khi đó các cổng Com đó được đánh dấu là Com 1, Com 2, Com 3,…Trên đó có 2 loại 
đầu nối được sử dụng cho cổng nối tiếp RS232 loại 9 chân (DB09) hoặc 25 chân (DB25). 
Tuy hai loại đầu nối này có cùng song song nhưng hai loại này được phân biệt bởi cổng 
đực (DB09) và cổng cái (DB25). 
 
Xét sơ đồ chân cổng Com 9 chân: 
 
 
 
 
 
 
 
 
 
Trong hình 3.2 ở trên mô tả ký hiệu chân của cổng Com DB-09, chức năng các 
chân như sau: 
 Chân 1: Data Carrier Detect (DCD) : Phát tín hiệu mang dữ liệu 
 Chân 2: Receive Data (RxD): Nhận dữ liệu 
 Chân 3: Transmit Data (TxD): Truyền dữ liệu 
Hình 3.2. Sơ đồ chân cổng COM-DB9  
Data carrier detect 
Data set ready 
Receive data 
Request to send 
Transmit data 
Clear to send 
Data terminal ready 
Ring indicator 
Signal ground 
 
Protective ground 
 
CHƯƠNG 3: TÍNH TOÁN VÀ THIẾT KẾ 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             25 
 Chân 4: Data Terminal Ready (DTR): Đầu cuối dữ liệu sẵn sàng được kích hoạt 
bởi bộ phận khi muốn truyền dữ liệu 
 Chân 5: Singal Ground (SG): Mass của tín hiệu 
 Chân 6: Data Set Ready (DSR): Dữ liệu sẵn sàng, được kích bởi bộ truyền khi nó 
sẵn sàng nhận dữ liệu 
 Chân 7: Request to Send : Yêu cầu gửi, bộ truyền đặt đường này lên mức hoạt 
động khi sắn sàng truyền dữ liệu 
 Chân 8: Clear To Send (CTS): Xóa để gửi, bộ phận đặt đường này lên mức kích 
hoạt động để thông báo cho bộ truyền là nó sẵn sàng nhận tín hiệu 
 Chân 9: Ring Indicate (RI): Báo chuông cho biết là bộ nhận dạng đang nhận tín 
hiệu rung chuông 
 Quá trình truyền nhận dữ liệu 
 
Truyền dữ liệu qua cổng nối tiếp RS232 được thực hiện không đồng bộ. Do vậy, 
tại một thời điểm chỉ có một bit được truyền, dạng sóng truyền được mô tả trong hình 
3.3 bên dưới. 
 
 
 
 
 
 
  
Bộ truyền gửi một bit bắt đầu (Startbit) để thông báo cho bộ nhận biết một ký tự 
sẽ được gửi đến trong lần truyền bit tiếp theo. Bit này luôn bắt đầu bằng mức 0. Tiếp 
theo đó là các bit dữ liệu (bit data) được gửi dưới dạng mã ASCII (có thể là 5, 6, 7 hay 
8 bit dữ liệu). Sau đó là một Parity bit (kiểm tra bit chẵn lẻ hay không) có thể có hoặc 
không và cuối cùng là bit dừng (Stopbit) có thể là 1 hay 2 bit dừng, trong đó ký hiệ 
LOW và HIGHT tương ứng với mức 0 và 1. 
 
 
HIGHT 
Starbit 
  1        1       0        1        0        0       1        0 
 D0    D1     D2     D3     D4    D5    D6     D7 
-12v 
LOW 
+12V 
Stopbit 
Hình 3.3. Dạng sóng truyền dữ liệu theo chuẩn RS232 
CHƯƠNG 3: TÍNH TOÁN VÀ THIẾT KẾ 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             26 
 Tốc độ Baud 
 
Đây là một tham số đặc trưng của RS232. Tham số này chính là đặc trưng cho 
quá trình truyền dữ liệu qua cổng nối tiếp RS232. Tốc độ bit được định nghĩa là số bit 
truyền được trong thời gian 1 giây. Tốc độ bit này phải được thiết lập ở bên phát và bên 
nhận đều phải có tốc độ như nhau (tốc độ giữa vi điều khiển và máy tính phải chung 
nhau 1 tốc độ truyền bit). 
 
Ngoài tốc độ bit còn một tham số để mô tả tốc độ nữa là tốc độ Baud. Tốc độ 
Baud liên quan đến tốc độ mà phần tử mã hóa dữ liệu được sử dụng để diễn tả bit được 
truyền còn tốc độ bit thì phản ánh tốc độ thực tế mà các bit được truyền. Vì một phần tử 
báo hiệu sự mã hóa một bit nên khi đó hai tốc độ bit và tốc độ baud phải đồng nhất. 
 
Một số tốc độ baud thường dùng: 50, 75, …1200, 2400,…115200…Trong thiết 
bị họ thường dùng tốc độ là 19200. Khi sử dụng chuẩn nối tiếp RS232 thì yêu cầu khi 
sử dụng chuẩn là thời gian chuyển mức logic không  vượt quá 4% thời gian truyền 1 bit. 
Do vậy, nếu tốc độ bit càng cao thì thời gian truyền 1 bit càng nhỏ và thời gian chuyển 
mức logic càng phải nhỏ. Điều này làm giảm tốc độ Baud và khoảng cách truyền.  
 Bit chẵn lẻ hay Parity Bit 
 
Đây là bit kiểm tra lỗi trên đường truyền. Thực chất của quá trình kiểm tra lỗi khi 
truyền dữ liệu là bổ xung thêm dữ liệu được truyền để tìm ra hoặc sửa một số lỗi trong 
quá trình truyền. Do đó trong chuẩn RS232 sử sụng một kỹ thuật kiểm tra chẵn lẻ. 
 
Một bit chẵn lẻ được bổ sung vào dữ liệu được truyền để cho thấy số lượng các 
bit “1” được gửi trong khung là chẵn hay lẻ. 
 
Một Parity bit chỉ có thể tìm ta một số lẻ các lỗi chẳng hạn như 1, 3, 5, 7, 9,… 
Nếu như một bit chẵn bị mắc lỗi thì Parity bit sẽ trùng giá trị với trường hợp không mắc 
lỗi vì thế không phát hiện ra lỗi. Do đó trong kỹ thuật hóa lỗi này không được sử dụng 
trong trường hợp có khả năng một vài bit bị mắc lỗi. 
 Giới thiệu IC Max232  
 
Max232 là IC chuyên dùng cho giao tiếp giữa RS232 và thiết bị ngoại vi. Max232 
là IC của hãng Maxim. Đây là IC chạy ổn định và được sử dụng phổ biến trong các mạch 
giao tiếp chuẩn RS232. Chúng có nhiệm vụ chuyển đổi mức qua lại giữa tín hiệu TTL 
và RS232.  Mỗi đầu truyền ra và cổng nhận tín hiệu đều được bảo vệ chống lại sự phóng 
CHƯƠNG 3: TÍNH TOÁN VÀ THIẾT KẾ 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             27 
tĩnh điện. Ngoài ra Max232 còn được thiết kế với nguồn +5V cung cấp nguồn công suất 
nhỏ. 
  
 
 
 
 
 
IC Max232 có hai bộ đệm truyền và hai bộ đệm nhận như mô tả trong hình 3.4. 
Nguyên lý hoạt động của IC: Max232 là IC lái điện áp, có nhiệm vụ tương thích điện áp 
TTL của vi điều khiển. Bởi vì chuẩn RS232 không tương thích với mức logic TTL, do 
vậy nó yêu cầu một bộ điều khiển đường truyền để đổi mức điện áp RS232 về các mức 
TTL và ngược lại. IC Max232 sẽ liên kết giữa vi điều khiển và cổng Com của máy tính, 
từ đó tạo cầu nối cho việc truyền dữ liệu giữa vi điều khiển và máy tính, sơ đồ kết nối 
được mô tả như hình 3.5 bên dưới. 
 
 
 
 
 
 
 
 
 
b. Khối điều khiển và hiển thị 
 Giới thiệu PIC 16F887 
Có rất nhiều loại vi điều khiển có thể dùng trong mạch điều khiển như: AVR, 
AT89, PIC,…Trong đề tài sử dụng vi điều khiển PIC 16F887 vì dễ lập trình và phổ biến, 
nó chịu được điện áp 5V, và dòng tối đa là 300mA [7]. Làm nhiệm vụ giao tiếp với máy 
tính qua cổng COM DB-9 để lấy dữ liệu từ khối xử lý để điềm khiển đèn led. 
 
Hình 3.4. IC Max232 [6] 
Hình 3.5. Sơ đồ kết nối giữa cổng COM và  IC Max232 
CHƯƠNG 3: TÍNH TOÁN VÀ THIẾT KẾ 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             28 
Vi điều khiển PIC 16F887: 
PIC 16F887 là một loại vi điều khiển của hãng Microchip được tích hợp nhiều 
chức năng như ADC, ngắt, counter, PWM,…đồng thời hỗ trợ nhiều chuẩn giao tiếp 
truyền dữ liệu như UART, bus 1 wire, I2C…trong đề này sử dụng UART. 
Đặc điểm thực thi tốc độ cao của PIC là: 
 Có 35 lệnh đơn. 
 Thời gian thực hiện tất cả các lệnh là 1 chu kì máy, ngoại trừ lệnh rẽ nhánh là 2. 
 Tốc độ hoạt động. 
 Ngõ vào xung clock có tần số 20MHz. 
 Chu kì lệnh thực hiện lệnh là 200ns. 
 Có nhiều nguồn ngắt. 
 Có 3 kiểu định địa chỉ trực tiếp, gián tiếp và tức thời. 
Vi điều khiển PIC16F887 có 40 chân trong đó có 35 I/O để kết nối với ngoại vi, 
có thể nhận dòng và cấp dòng tới 25mA [7]. Điện áp hoạt động từ 2V đến 5.5V. Bộ nhớ 
của PIC16F887 có 3 bộ nhớ Flash 8192 words, SRAM 368 bytes, EEPROM 256 bytes.   
  Sơ đồ chân 
 
 
 
 
 
 
 Chức năng từng chân 
 
 
35 IO được chia ra làm 5 Port: Port A, Port B, Port C, Port D, Port E đề tài này 
chỉ sử dụng Port A và Port C :  
 Port A 
 
 
Có 8 pin I/O, đây là các chân hai chiều, nghĩa là có thể xuất và nhập được. Chức 
năng I/O này được điều khiển bởi thanh ghi TRISA. Muốn xác lập chức năng của một 
chân trong Port A là input, ta set bit điều khiển tương ứng với chân đó trong thanh ghi 
Hình 3.6. Sơ đồ chân vi điều khiển PIC16F887 
CHƯƠNG 3: TÍNH TOÁN VÀ THIẾT KẾ 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             29 
TRISA và ngược lại, muốn xác lập chức năng của một chân trong Port A là output, ta 
clear  bit điều khiển tương ứng với chân đó trong thanh ghi TRISA.  
 
R/W-x        R/W-x       R/W-x      R/W-x       R/W-x       R/W-x      R/W-x      R/W-x       
RA7 
RA6 
   RA5 
     RA4      RA3 
RA2 
RA1 
   RA0 
Bit 7                                                                                                                      bit 0 
 
 
 
R/W-x        R/W-x       R/W-x      R/W-x       R/W-x       R/W-x      R/W-x      R/W-x       
TRISA7 TRISA6 TRISA5 TRISA4 TRISA3 TRISA2 TRISA1 
TRISA0 
Bit 7                                                                                                                       bit 0 
 
 Port C 
 
Port C gồm 8 pin I/O (RC0 – RC7). Thanh ghi điều khiển xuất nhập tương ứng là 
TRISC, cách xác lập vào ra tương tự như Port A. Bên cạnh đó Port C còn chứa các chân 
chức năng của bộ so sánh, bộ timer1, bộ PWM và các chuẩn giao tiếp nối tiếp I2C,  
SPI, SSP, USART. 
 Sơ đồ kết nỗi giữa vi điều khiển và led đơn 
  
 
 
 
 
 
 
 
Hình 3.7. Thanh ghi Port A 
Hình 3.8. Thanh ghi Tris A 
Hình 3.9. Sơ đồ kết nối vi điều khiển với led đơn 
CHƯƠNG 3: TÍNH TOÁN VÀ THIẾT KẾ 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             30 
 
Theo như mô tả của hình 3.9, là 5 led từ D1 đến D5 được kết nối tương ứng với 
RA0 đến RA4 của Port A thông qua điện trở 330 ohm để hạn dòng cho led.  
 
Tra Datasheet PIC 16F887 ta được : 
 
{𝐼𝑉Đ𝐾= 330𝑚𝐴, 𝑉
𝑉Đ𝐾= 5𝑉
𝐼𝐿𝑒𝑑= 10𝑚𝐴, 𝑉
𝐿𝑒𝑑= 2𝑉       =>      R = 
𝑉𝑉Đ𝐾−𝑉𝐿𝑒𝑑
𝐼𝐿𝑒𝑑
=
5−2
10𝑥10−3 = 300 ohm         (2.8) 
 
Từ kết quả tính toán trên : chọn R = 330 ohm 
c. 
  Khối nguồn 
 
Tổng dòng cần thết cho mạch là : 
 
232
max
I
I
I
led
n
vidieukhie


= 300 + 6x10 + 10 = 370mA < 1A 
 
Dựa vào mức dòng điện và điện áp sử dụng ở các khối trên. Ta chọn nguồn vào 
cho mạch là 5V/1A, qua các tụ lọc C5, C6 để ổn định dòng điện ra không bị gợn sóng, 
mạch sử dụng diode D7 dùng để chống mắc sai cực. 
 
Mạch sử dụng nguồn ngoài là nguồn chỉnh lưu DC 9V, tần số 50Hz, tuy nhiên để 
đảm bảo chất lượng của nguồn, điện áp được san phẳng, hạn chế sự nhấp nhô ta vẫn lắp 
thêm vào mạch các tụ có điện dung lớn để lọc nguồn. 
Chọn độ gợn sóng sau chỉnh lưu: 𝐾
𝑔𝑠= 5% = 0,05  
Chu kỳ chỉnh lưu: 𝑇
𝐶𝐿=  
1
𝑓𝐶𝐿 = 
1
2𝑥50 = 0,01 s 
 
 
 
         (2.9) 
Điện trở tải tương đương: R =
𝑈
𝐼= 
5
1 = 5 ohm 
 
 
 
       (2.10) 
Khi đó ta được: 𝐶𝐿 = 
𝑇𝐶𝐿
3𝑅𝐾𝑔𝑠 = 
0,01
3.5.0,05 = 0,013F 
 
        (2.11) 
Và điện áp đi qua tụ là 9V 
Vậy ta chọn tụ lọc : 1000uF/ 25V 
 
Ngoài ra để lọc nhiễu cao tần ta mắc thêm tụ C7, C8 là các tụ 100nF. 
 IC 7805  
Để ổn định điện áp nguồn ở đây dùng IC7805 như hình 3.10 để ổn định điện áp 5V 
cho mạch. 
IC 7805 có 3 chân : 
 Chân 1 : chân IN 
  
 
 
 Chân 2 : chân GND 
 Chân 3 : chân OUT 
Hình 3.10. IC ổn áp 7805 
CHƯƠNG 3: TÍNH TOÁN VÀ THIẾT KẾ 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             31 
 
Ngõ ra OUT luôn ổn định ở điện áp 5V dù điện áp từ nguồn cung cấp có thay đổi 
trong giới hạn cho phép. IC này thường dùng để bảo vệ những mạch hoạt động ở mức 
điện áp 5V (các loại IC thường hoạt động ở mức điện áp). Nếu nguồn điện có sự cố đột 
ngột, điện áp tăng cao thì mạch vẫn hoạt động ổn định nhờ có IC 7805 vẫn giữ được 
điện áp ngõ ra OUT 5V không đổi [8], sơ đồ kết nối được mô tả như hình 3.11 bên dưới.
 
 
 
 
 
 
 
 
 Thiết kế nút Reset 
Bình thường nút Reset ở trạng thái thường hở, khi tác động nút Reset các led 
trong mạch sẽ nhấp nháy 2 lần, khi đó toàn bộ mạch điều khiển được Reset, sơ đồ kết 
nối như hình 3.12 bên dưới. 
 
 
 
 
 
 
 
Tính toán thiết kế nút Reset: 
 R7 = 
𝑉𝐶𝐶−𝑉𝐿𝐸𝐷
𝐼𝐿𝐸𝐷
=
5−2
10𝑚𝐴 = 300 => chọn R7 = 330 ohm  
 
      (2.12) 
Chon R6 = 10k,  ta có 𝑇=  𝑅𝐶 =>  C=
1
𝑅𝑓= 
1
10𝐾.2.50 = 1uF   
      (2.13) 
 
 
 
Hình 3.11. Sơ đồ nguyên lý mạch nguồn 
Hình 3.12. Sơ đồ nút nhấn Reset giao tiếp    với 
PIC16F887 
CHƯƠNG 3: TÍNH TOÁN VÀ THIẾT KẾ 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             32 
3.3.3. Sơ đồ nguyên lý của toàn mạch 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Hoạt động của mạch: Tín hiệu từ PC đi xuống, thông qua cổng COM DB-09, qua 
Max232 để chuyển đổi mức tín hiệu giữa TTL và RS232 sau đó đưa vào 2 chân TX và 
RX của vi điều khiển. Vi điều khiển nhận tín hiệu đem đi xử lý và xuất ra Port A để điều 
khiển sáng tắt led. Mạch còn được thiết kế nút nhấn Reset dùng để reset lại mạch. 
 
 
Hình 3.13. Sơ đồ nguyên lý toàn mạch điều khiển 
CHƯƠNG 4: THI CÔNG HỆ THỐNG 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             33 
Chương 4. THI CÔNG HỆ THỐNG 
4.1. GIỚI THIỆU.  
 
Phần lớn công việc được thực hiện trên máy tính với sự hỗ trợ của các phần mềm 
và công cụ. Do đó, nhóm chỉ thi công mạch giao tiếp, xử lý tín hiệu điều khiển (gọi tắt 
là mạch điều khiển). Dùng LED đơn để giả lập tải – thiết bị cần điều khiển. Thông qua 
việc bật/tắt đèn LED có thể quan sát được quá trình điều khiển các thiết bị. Mạch điều 
khiển này được lắp kín vào hộp nhằm bảo vệ và tăng tính thẫm mĩ. 
4.2. THI CÔNG HỆ THỐNG 
4.2.1.  Thi công bo mạch. 
 
Vì mạch điện khá đơn giản nên nhóm quyết định sử dụng phần mềm Proteus của 
hãng Labcenter dùng để vẽ sơ đồ nguyên lý, mô phỏng và thiết kế mạch điện, gói này 
gồm có:  
 ISIS dùng để vẽ sơ đồ nguyên lý và chạy mô phỏng mạch điện. 
 ARES dùng để thiết kế mạch in. 
Bảng 4.1. Danh sách linh kiện sử dụng trong mạch điều khiển. 
STT 
Ký hiệu 
Tên linh kiện 
Số lượng 
Ghi chú 
1 
U1 
PIC16F887 
1 
Loại chân cắm 
2 
U2 
MAX232 
1 
Loại chân cắm 
3 
J2 
COM DB-9 
1 
Loại hàn trên board 
4 
R1, R2, R4,R5,R6,R7 Điện trở 330 Ohm 
6 
Loại ¼ W 
5 
R3 
Điện trở 10 K 
1 
Loại ¼ W 
6 
C5, C6 
Tụ điện 1000 uF 25V 
2 
Tụ hóa, phân cực 
7 
C7, C8 
Tụ điện 100 nF 
4 
Tụ gốm 
8 
D1, …, D6 
LED siêu sáng 
6 
Loại 5mm, 2V 
9 
BTN1 
Nút nhấn 
1 
Loại vuông, 4 chân 
10 
U3 
IC ổn áp 7805 
1 
Loại chân cắm 
11 
D7 
Diode chỉnh lưu 1A 
1 
Loại chân cắm 
 
 
 
 
CHƯƠNG 4: THI CÔNG HỆ THỐNG 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             34 
 Sơ đồ mạch in lớp dưới: 
 
 
 
 
 
 
 
 
 Sơ đồ vị trí linh kiện: 
 
 
 
 
 
 
 
 
4.2.2. Lắp ráp và kiểm tra 
Dựa vào bảng 4.1 và vị trí lắp ráp linh kiện trong hình 4.2 và xem kết hợp 
hình 4.3, tiến hành lắp từng linh kiện vào bo mạch sau đó hàn chì cố định chân 
linh kiện. Cứ như vậy thực hiện đến khi mạch được gắn đầy đủ linh kiện như hình 
Hình 4.1. Mạch in lớp dưới 
Hình 4.2. Sơ đồ bố trí linh kiện 
CHƯƠNG 4: THI CÔNG HỆ THỐNG 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             35 
4.3, rồi dùng VOM để kiểm tra mạch sau khi hàn có bị hở hay ngắn mạch không, 
sau đó sẵn sàng chạy thử nghiệm cho lần đầu tiên.  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Hình 4.4 là ảnh chụp của mạch điều khiển được thi công thực tế. Mạch sau 
khi hoàn thành phải đảm bảo không có linh kiện nào bị dư thừa hoặc lắp sai, các 
mối hàn phải kín, không tràn sang nơi khác. 
Hình 4.3. Mô hình trong không gian 3 chiều của mạch điều khiển 
Hình 4.4. Mạch thi công thực tế 
5 LED báo 
tín hiệu điều khiển 
Hàng rào mở rộng 
kết nối 
Trở hạn dòng 
cho LED  
Hàng rào thử 
tín hiệu Rx, Tx  
IC MAX232 
Cổng COM 
LED chỉ thị 
nguồn 
Nút reset 
PIC16F887 
IC 7805 
Cặp tụ 100nF 
Giắc cắm nguồn 
Diode chỉnh lưu 
Cặp tụ 1000uF 
IC MAX232 
CHƯƠNG 4: THI CÔNG HỆ THỐNG 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             36 
4.3. ĐÓNG GÓI VÀ THI CÔNG MÔ HÌNH 
4.3.1.  
Đóng gói bộ điều khiển 
 
 
 
 
 
 
 
 
 
Mạch điều khiển được đóng gói trong vỏ hộp chất liệu mi-ca để tránh những va 
đập từ bên ngoài, bảo vệ những linh kiện bên trong như hình 4.5. 
4.3.2. Kết nối các thành phần thành một hệ thống hoàn chỉnh 
 
 
 
 
 
 
 
 
 
 
Quy trình lắp ráp các thành phần để được một hệ thống hoàn chỉnh xem trong quy 
trình lắp ráp ở phần “hướng dẫn sử dụng”. Sau khi lắp ráp các bộ phận lại với nhau ta 
được một hệ thống hoàn chỉnh như hình 4.6. 
Hình 4.6. Hệ thống điều khiển thiết bị bằng cử chỉ 
tay thông qua xử lý ảnh 
Chương trình nhận dạng 
Mạch điều khiển 
webcam 
Hình 4.5. Mạch điều khiển được đóng hộp bảo vệ 
CHƯƠNG 4: THI CÔNG HỆ THỐNG 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             37 
4.4. LẬP TRÌNH HỆ THỐNG 
4.4.1. Lưu đồ giải thuật 
 Lưu đồ giải thuật cho toàn hệ thống điều khiển và nhận dạng cử chỉ 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Như hình 4.7 ở trên mô tả hoạt động của toàn hệ thống điều khiển thiết bị bằng cử 
chỉ tay, lưu đồ gồm ba khối chính, khối thu ảnh, khối xử lý và khối xuất tín hiệu điều 
khiển. Ảnh thu vào sau đó đem đi xử lý, xử lý xong tiến hành xuất tín hiệu xuống mạch 
điều khiển. 
Thu ảnh vào 
Xử lý ảnh 
Kết luận – 
Xuất tín hiệu 
điều khiển 
 
Hình 4.7. Lưu đồ cho 
toàn hệ thống 
 
Đọc ảnh 
Lọc màu da 
Xóa 
khuôn mặt 
Đúng 
Sai 
Tách vùng chứa bàn 
tay- Nhị phân hóa  
 
Tìm trọng tâm 
Xóa bỏ 
lòng bàn tay 
Gắn nhãn – 
đếm vùng chọn 
Khử nhiễu 
 
Kết luận số ngón tay 
Có 
khuôn mặt 
 
Hình 4.8. Lưu đồ giải thuật khối xử lý ảnh 
CHƯƠNG 4: THI CÔNG HỆ THỐNG 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             38 
Hoạt động của lưu đồ ( hình 4.8): Đầu tiên đọc ảnh có sẵn trong trong thư viện của 
máy tính hoặc ảnh thu vào từ webcam, sau đó đem đi nhận dạng khuôn mặt, nếu phát 
hiện có khuôn mặt thì tiến hành xóa khuôn mặt, không có khuôn mặt qua bước kế tiếp 
là lọc màu da bằng cách sử dụng không gian màu YCbCr, sau khi lọc màu da ta xác định 
vùng da chứa cánh tay và cắt lấy vùng ảnh chỉ chứa bàn tay, rồi tiếp tục nhị phân hóa và 
khử nhiễu ảnh vừa thu được bằng bộ lọc trung vị. Sau đó tìm trọng tâm của bàn tay và 
tính khoảng cách từ trọng tâm đến biên gần nhất để xóa bỏ lòng bàn tay, sau đó lấy ảnh 
chỉ chứa bàn tay trừ đi ảnh có lòng bàn tay bị xóa, lúc đó ta thu được ảnh chỉ chứa những 
ngón tay, cuối cùng tiến hành gắn nhãn và đếm số vùng da, có bao nhiêu vùng da là có 
bấy nhiêu ngón tay. 
Mạch điện được thiết kế để nhận tín hiệu từ máy tính, xử lý, điều khiển sáng hoặc 
tắt LED theo chỉ định. Khi được cấp nguồn, cả 5 LED sẽ nhấp nháy 2 lần sau đó tắt hẳn 
để kiểm tra LED và báo hiệu mạch sẵn sàng hoạt động. Trong chương trình chính chỉ 
cho sáng hoặc tắt LED theo mã lệnh gửi xuống từ máy tính, chỉ nhận dữ liệu khi nào có 
ngắt truyền tín hiệu tác động. Lưu đồ giải thật được mô tả trong hình 4.9 và 4.10. 
 Lưu đồ giải thuật mạch điều khiển: 
 
 
 
 
 
 
 
 
 
Chương trình chính chỉ việc kiểm tra xem biến k có thay đổi hay không, dựa vào 
giá trị mà k đang có để sáng hoặc tắt LED ngoài ra không làm gì thêm. Chương trình 
ngắt nhận dữ liệu chỉ được gọi khi có ngắt truyền thông tác động. Lúc này chương trình 
Bắt đầu 
Cấu hình cho PIC 
Nhấp nháy LED 2 lần 
Kiểm tra biến nhớ k, 
sáng hoặc tắt LED 
dựa vào biến k 
Hình 4.9. Lưu đồ chương trình 
chính mạch điều khiển 
Ngắt truyền dữ liệu 
Nhận dữ liệu, 
ghi vào biến nhớ k 
Xóa bộ nhớ đệm 
nhận dữ liệu 
Thoát khỏi ngắt 
Hình 4.10. Lưu đồ ngắt 
truyền thông nhận dữ liệu 
CHƯƠNG 4: THI CÔNG HỆ THỐNG 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             39 
sẽ tạm dừng đoạn lệnh đang xử lý rồi nhảy vào ngắt, nhận ký tự truyền xuống từ máy 
tính, ghi vào biến k sau đó xóa bộ đệm nhận dữ liệu và thoát khỏi ngắt, tiếp tục chạy 
chương trình tại vị trí tạm dừng lúc trước. 
4.4.2. Phần mềm lập trình cho máy tính 
Matlab là một phần mềm lớn trong lĩnh vực toán số, viết tắt từ MATrix 
LABoration, được thiết kế bởi công ty MathWorks. Matlab thực hiện trên cơ sở chính 
là phép tính vector và ma trận: cho phép tính toán số với ma trận, vẽ đồ thị hàm số hay 
biểu đồ thông tin, thực hiện thuật toán, tạo các giao diện người dùng và liên kết với 
những chương trình máy tính viết trên nhiều ngôn ngữ lập trình khác. 
 
 
 
 
Việc tải về, cài đặt và mở khóa sản phẩm cũng tương tự như CCS, người dùng 
cần vào trang chủ của hãng tại địa chỉ https://mathworks.com tìm mua phiên bản phù 
hợp hoặc sử dụng phiên bản miễn phí dành riêng cho sinh viên, nghiên cứu sinh bằng 
cách tạo một tài khoản và điền đầy đủ các thông tin theo yêu cầu của Matwork. Các 
bước tiếp theo làm tương tự như phần cài đặt CCS. 
 Hướng dẫn sử dụng phần mềm Matlab phiên bản 2013.a. Giao diên làm việc 
của Matlab như hình 4.12.  
 
 
 
 
 
 
 
Hình 4.11. Biểu tượng Matlab trên màn hình làm việc 
Hình 4.12. Cửa sổ làm việc của Matlab 
CHƯƠNG 4: THI CÔNG HỆ THỐNG 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             40 
 
 
 
 
 
 
 
 
 
 
Hình 4.13: Cửa sổ làm việc của Matlab, trong phạm vi làm việc này chứa các vùng 
được quy định như sau: 
 Vùng chứa các tab, thanh công cụ, các phím tắt trình điều khiển mặc định của 
phần mềm. 
 Cửa sổ lệnh console: nhập các mã lệnh của chương trình. Các lệnh này được xây 
dựng sẵn nhằm giải quyết một nhiệm vụ nhất định. 
 Vùng thư mục hiện hành: cho biết người dùng đang làm việc với tập tin/thư mục 
được lưu trữ ở đâu trong ổ đĩa. 
 Vùng Workspace: Nơi hiển thị việc khởi tạo, lưu giữ các biến, vùng nhớ khi chạy 
chương trình. 
 Vùng Command History: Ghi lại lịch sử các thao tác đã thực thi kể từ lúc khởi 
chạy phần mềm. 
Hình 4.13: Cửa sổ soạn thảo và chạy code. Matlab cung cấp môi trường soạn thảo 
rất chuyên nghiệp, các công cụ hỗ trợ soạn thảo khá đầy đủ. Tại đây, sau khi viết code 
hoàn tất, có thể kích chuột vào biểu tượng “Run” (phím tắt F5) để thực thi code. Khi 
chạy code, các quá trình, thông báo, kết quả sẽ được ghi lên cửa sổ lệnh console. Nếu 
chương trình chạy đúng sẽ không có lỗi nào được hiển thị, nếu vì một lý do nào đó ví 
Hình 4.13. Cửa sổ soạn thảo code 
CHƯƠNG 4: THI CÔNG HỆ THỐNG 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             41 
dụ chương trình viết sai hoặc có lỗi phát sinh khi chạy code, sẽ có thông báo lỗi màu đỏ 
hiện ra kèm theo gợi ý khắc phục (nếu có). 
 
 
 
 
 
 
 
Hình 4.14 mô tả một thông báo lỗi xuất hiện ngay khi chạy một chương trình có 
lỗi bên trong nó. Kèm theo thông báo lỗi là gợi ý khắc phục về mặt cú pháp. Trong 
trường hợp này, chương trình “handdetection_ok” bị lỗi ở đâu đó gần dòng thứ 35 trong 
code được đánh dấu. 
4.5. LẬP TRÌNH MÔ PHỎNG 
4.5.1. Mô phỏng hệ thống trên máy tính 
 
 
 
 
 
 
 
 
 
 
 
 
 
Hình 4.14. Xuất hiện thông báo lỗi khi code bị sai 
Hình 4.15. Khởi chạy, liên kết các thành phần trong hệ thống 
CHƯƠNG 4: THI CÔNG HỆ THỐNG 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             42 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Việc mô phỏng hoạt động của hệ thống trên máy tính khá dễ dàng, chỉ việc liên 
kết các phần mềm lại với nhau sao cho chúng có thể “thấy” nhau là được, việc cấp nguồn 
cho mạch sẽ do phần mềm đảm nhiệm. Hình 4.15 đến 4.17 cho thấy việc chạy mô phỏng 
hệ thống trên máy tính.  
Nhìn vào hình 4.17, có thể thấy giao diện người dùng được sử dụng để nhận ảnh 
và xử lý, xuất tín hiệu điều khiển qua mạch điện trong phần mềm Proteus bật hoặc tắt 
LED. Một cửa sổ tên Virtual Terminal được thêm vào để người dùng biết lịch sử tín 
hiệu đã truyền xuống trong quá trình làm việc. 
 
Hình 4.16. Chạy mô phỏng hệ thống với ảnh chứa 1 ngón tay 
Hình 4.17. Chạy mô phỏng hệ thống với ảnh chứa 4 ngón tay 
CHƯƠNG 4: THI CÔNG HỆ THỐNG 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             43 
4.5.2. Kết quả chạy thực tế 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Toàn bộ hệ thống làm việc ổn định, tốc độ đáp ứng khá nhanh. Trong hình 4.18 
là một ví dụ khi chương trình xử lý với ảnh có sẵn trong máy tính. Hình 4.19 là ảnh chụp 
khi hệ thống đang làm việc với ảnh thu tử webcam. 
4.6. VIẾT TÀI LIỆU HƯỚNG DẪN SỬ DỤNG, THAO TÁC 
4.6.1. Hướng dẫn sử dụng 
Để tránh những lỗi sai khi sử dụng chương trình và đảm bảo an toàn cho người hoặc 
thiết bị khi vận hành hệ thống, yêu cầu đọc kỹ hướng dẫn sử dụng sau. 
Hình 4.18. Chạy thực tế với ảnh tĩnh 
Hình 4.19. Chạy thực tế với ảnh thu từ webcam 
CHƯƠNG 4: THI CÔNG HỆ THỐNG 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             44 
1. Cấp nguồn cho hệ thống làm việc:  
Hệ thống gồm có 3 thành phần chính: webcam, máy tính, bo mạch điều khiển mỗi 
thành phần hoạt động ở mỗi cấp điện áp và điều kiện làm việc khác nhau. Cần cung cấp 
nguồn điện đúng theo cấp điện áp yêu cầu của từng bộ phận: 
 Webcam: Nguồn 5V – 500mA. Có thể dùng nguồn từ cổng USB của máy 
tính để sử dụng.  
 Mạch điều khiển: Nguồn 9V – 1A. 
2. Kết nối các thành phần lại với nhau: 
 Việc kết nối các thành phần trong hệ thống nên theo trình tự như sau: kết nối mạch 
điều khiển với cổng COM trên máy tính. Trường hợp máy tính không có sẵn cổng COM-
DB9 thì có thể dùng cáp chuyển đổi “USB to RS232” để có cổng COM-DB9 [9]. Sau 
đó kết nối webcam với máy tính qua cổng USB. Xem hình 4.20 và 4.21 để biết cách kết 
nối giữa các thành phần trong hệ thống. 
 
 
 
 
 
 
 
 
 
 
 
 
 
Hình 4.20. Kết nối webcam với máy tính qua cổng USB 
Hình 4.21. Kết nối mạch điều khiền với máy tính 
CHƯƠNG 4: THI CÔNG HỆ THỐNG 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             45 
3. Khởi động chương trình xử lý: 
Chương trình chưa được đóng gói để trở thành một phần mềm có thể chạy độc lập 
mà phải dựa vào phần mềm Matlab để có môi trường làm việc. Trong Matlab, tìm đến 
thư mục chứa chương trình xử lý “GUI” kéo thả chương trình này vào vùng lệnh 
“console” hoặc chuột phải chọn “Run” hoặc nhấn phím tắt “F9” để chạy chương trình. 
4. Các phím chức năng trên giao diện:  
Trên giao diện người dùng có các nút bấm mỗi nút bấm mang một chức năng nhất 
định được quy định trong bảng 4.2. 
Bảng 4.2 Mô tả các phím chức năng trong giao diện điều khiển. 
STT 
Tên nút bấm 
Chức năng 
1 
Disk 
Mở cửa sổ chọn ảnh đầu vào cho quá trình xử lý. 
2 
Video 
Chạy chương trình với webcam kết nối trong hệ 
thống. 
3 
Stop video 
Dừng chế độ chạy tự động. 
4 
Process 
Chạy chương trình. 
5 
Show 
Hiện quá trình xử lý dưới dạng các ảnh kết quả 
của từng giai đoạn. 
6 
Restart 
Khởi động lại toàn bộ chương trình. 
7 
About 
Hiện thông tin tác giả và chương trình. 
8 
Exit 
Thoát và đóng chương trình. 
 
5. Lựa chọn chế độ làm việc: Có 2 chế độ làm việc của hệ thống:  
 Xử lý với ảnh có sẵn: Người dùng chọn từng ảnh có sẵn trong cơ sở dữ liệu trong 
máy tính để chương trình nhận dạng. Theo cách này, người dùng cần thực hiện lần lượt 
các thao tác sau: 
Bước 1: Từ giao diện chính của phần mềm, bấm chọn vào nút bấm “Disk”, 
chương trình sẽ mở ra một cửa sổ mới cho phép truy cập đến các tập tin, thư mục có sẵn 
trong máy tính.  
 
 
CHƯƠNG 4: THI CÔNG HỆ THỐNG 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             46 
 
 
 
 
 
 
Người dùng sẽ điều hướng đến ảnh cần xử lý, chọn mở ảnh (hình 4.22). Chương 
trình sẽ đọc ảnh vào và hiển thị lên vùng ảnh đang chờ xử lý “Original Image” như hình 
4.23. 
 
 
 
 
 
 
Bước 2: Bấm chọn vào nút “Process” để chương trình tự động nhận dạng ảnh đã 
chọn. Sau khi xử lý xong, chương trình sẽ hiển thị một ảnh đen trắng chứa các vùng 
ngón tay ở vùng “Result Image” (hình 4.24) và bật sáng một đèn LED ở một ngõ ra 
tương ứng với số ngón tay, đồng thời cũng gửi một tín hiệu điều khiển ra cổng giao tiếp 
COM-DB9. Mạch giao tiếp - điều khiển bên ngoài sẽ nhận tín hiệu này và bật sáng LED 
đúng theo thứ tự trên ngõ ra “OUTPUT” của phần mềm. 
 
 
 
 
 
 
 
Hình 4.22. Cửa sổ chọn ảnh cần xử lý 
Hình 4.23. Ảnh đang chờ để xử lý 
Hình 4.24. Kết quả xử lý ảnh đã chọn 
CHƯƠNG 4: THI CÔNG HỆ THỐNG 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             47 
Bước 3: Bước này mang tính tùy chọn. Nếu muốn biết quá trình ảnh được xử lý qua 
các công đoạn trong chương trình, người dùng có thể chọn vào nút “Show” để xem thêm 
2 bước trung gian trong quá trình nhận dạng. 
Bước 4: Lặp lại thao tác từ bước 1 trong chỉ dẫn này để làm việc với một ảnh khác 
có sẵn trong máy. 
 Xử lý với ảnh thu trực tiếp từ webcam: Chương trình sẽ tự động thu cử chỉ tay 
của người dùng thông qua webcam. Kết quả xử lý được tự động cập nhật liên tục theo 
thời gian. Các thao tác khi làm việc ở chế độ này: 
Bước 1: Bấm chọn nút “Video” trên giao diện, đợi chương trình cấu hình một chút, 
khi có ảnh xuất hiện ở khung “Original image” thì chương trình đã sẵn sàng thu ảnh từ 
webcam.  
Bước 2: Đưa tay ra trước webcam và thay đổi cử chỉ tay để chương trình nhận 
biết. Các yếu tố về khoảng cách, độ sáng nơi làm việc cần được đảm bảo theo yêu cầu 
kèm theo. Xem hình 4.41. 
 
 
 
 
 
 
Bước 3: Bấm chọn vào nút “Stop video” hoặc phím tắt là “q” trên bàn phím để thoát 
chương trình thu ảnh từ webcam. 
Bước 4: Lặp lại từ bước 1 trong chỉ dẫn này để bắt đầu một quá trình mới. 
Chú ý: Phải tắt chức năng webcam trước rồi mới thực hiện các tính năng khác, nếu 
không chương trình sẽ bị lỗi, phải khởi động lại chương trình mới có thể tiếp tục. 
 
Hình 4.25. Thu ảnh từ webcam 
và xử lý 
Chương trình nhận dạng 
LED chỉ thị trên mạch điều khiển 
Webcam 
Tay người 
dùng 
CHƯƠNG 4: THI CÔNG HỆ THỐNG 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             48 
6. Dừng hoặc thoát chương trình: 
Khi đang chạy chương trình ở chế độ thu ảnh từ webcam, bấm chọn “Stop video” 
để dừng chương trình. Bấm vào “Exit” để thoát chương trình hoàn toàn. 
7. Các quy tắc an toàn khác: 
 Khi hệ thống đã được cấp điện, không tự ý chạm vào những vùng kim loại nghi 
ngờ có điện để tránh tai nạn điện giật. Không để mạch làm việc trong môi trường ẩm 
ướt hoặc nhiệt độ môi trường vượt quá 60 độ C. 
8. Bảng tra cứu lỗi:  
Cung cấp ngho người dùng một số lỗi kỹ thuật có thể xảy ra với hệ thống và cách 
chuẩn đoán khắc phục. 
Bảng 4.3 Bảng  tra cứu lỗi nhanh của hệ thống 
STT 
Mô tả lỗi  
Nguyên nhân 
Khắc phục 
1 
Đèn báo nguồn 
mạch điều khiển 
không sáng. 
- Nguồn cung cấp bị hỏng, 
mất áp, áp nguồn dưới 5V. 
- Không có nguồn. 
- Xem lại dây dẫn 
- Thay nguồn mới 
2 
5 LED chỉ thị không 
nhấp nháy khi khởi 
động. 
(LED chỉ thị nguồn 
báo sáng) 
- Vi điều khiển chưa nạp 
chương trình, bị treo reset; 
- Chết VĐK. 
- Nạp lại chương 
trình, kiểm tra mạch 
reset. 
- Thay VĐK 
3 
Không giao tiếp 
được với máy tính. 
- Lỏng cáp nối hoặc cáp bị 
đứt. 
- Cố định đầu cắm 
cáp. 
- Thay cáp mới. 
4 
Máy tính không 
chụp được ảnh từ 
webcam. 
- Chưa có webcam 
- Webcam chưa nhận 
driver, mất nguồn. 
- Kiểm tra kết nối tới 
webcam. 
- Cài driver cho máy. 
 
4.6.2. Quy trình vận hành hệ thống.  
Để thuận tiện cho người sử dụng bước đầu có thể làm quen với hệ thống nhận dạng 
cử chỉ tay này, có thể dựa vào lưu đồ quy trình vận hành hệ thống ở hình 4.26. 
 
 
 
CHƯƠNG 4: THI CÔNG HỆ THỐNG 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             49 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Mô tả hoạt động của lưu đồ: 
 
Kết nối các thành phần, cấp nguồn cho hệ thống: Việc kết nối các thành 
phần để được một hệ thống hoàn chỉnh xem trong “hướng dẫn sử dụng”. Đảm bảo 
rằng chỉ cấp nguồn cho hệ thống sau khi đã lắp ráp các bộ phận lại với nhau. Tính 
từ khi cấp nguồn cho hệ thống, LED chỉ thị nguồn màu đỏ sẽ bật sáng báo hiệu 
mạch đã nhận nguồn. Cùng lúc đó cả 5 LED chỉ thị sẽ nhấp nháy 2 lần để kiểm 
tra tình trạng của mạch điện, nếu không có lỗi gì xảy ra trong quá trình này thì cả 
5 LED sẽ tắt báo hiệu mạch sẵn sàng làm việc. 
 
Khởi chạy chương trình trên máy tính, chọn chế độ làm việc: Như đã 
trình bày trong “hướng dẫn dử dụng”, chương trình có 2 chế độ làm việc, tùy nhu 
cầu sử dụng mà người dùng chọn lựa cho phù hợp. Nếu chọn ảnh trong máy thì 
Kết nối các thành phần trong hệ thống 
Cấp nguồn cho hệ thống 
Khởi chạy chương trình trên máy tính 
Lựa chọn chế độ làm việc 
Đưa tay vào vùng chụp ảnh của webcam 
Điều khiển bằng cách thay đổi cử chỉ tay 
Dừng chương trình, 
Tắt và thoát chương trình 
Chọn ảnh cần xử lý 
Xem kết quả 
Xử lý ảnh tĩnh 
Thu ảnh từ webcam 
webcam 
Còn làm việc 
Ngắt nguồn điện khỏi hệ thống 
Hình 4.26. Lưu đồ vận hành hệ thống nhận dạng cử chỉ tay, 
điều khiển thiết bị 
CHƯƠNG 4: THI CÔNG HỆ THỐNG 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             50 
thao tác này phải lặp đi lặp lại một cách thủ công trong khi việc xử lý với ảnh từ 
webcam sẽ làm việc liên tục đến khi người dùng tắt tính năng này. 
 
Xem kết quả: Kết quả được hiển thị trên màn hình mày tính và trên mạch 
điều khiển, người dùng dựa vào  đó để đưa ra quyết định phù hợp. Ví dụ khi muốn 
sáng LED thứ nhất, người dùng chọn ảnh có một ngón tay cho chương trình xử 
lý. Kết quả sau xử lý là LED ở vị trí số 1 sẽ bật sáng, trên màn hình cũng hiện ảnh 
sau nhận dạng.  
 
Dừng, tắt và thoát chương trình: Khi không làm việc với hệ thống, người 
dùng cần tắt phền mềm và thoát khỏi chương trình. Trong trường hợp không làm 
việc với hệ thống trong một thời gian dài, ngắt hẳn nguồn điện ra khỏi hệ thống 
bằng cách rút phích nguồn ra khỏi ổ điện.
CHƯƠNG 5: KẾT QUẢ_NHẬN XÉT_ĐÁNH GIÁ 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             51 
Chương 5. KẾT QUẢ_NHẬN XÉT_ĐÁNH GIÁ 
5.1. KẾT QUẢ XỬ LÝ ẢNH 
 Bộ lọc ảnh. 
Khi thu thập và làm việc với ảnh số, điều quan trọng là phải loại bỏ được các nhiễu 
không mong muốn xuất hiện trong ảnh. Tùy vào loại nhiễu mà áp dụng các bộ lọc thích 
hợp để loại bỏ tối đa những ảnh hưởng xấu mà nhiễu đó tác động lên ảnh xử lý.  
 
 
 
 
 
 
 
 
 
Hình 5.1 mô tả một ảnh nhị phân bị nhiễu tác động làm xuất hiện ngẫu nhiên các 
điểm trắng, đen khắp ảnh. Với loại nhiễu này, có thể dùng bộ lọc trung vị để khử nhiễu 
và thu được ảnh có chất lượng tốt hơn như hình 5.1b. 
 Quá trình hệ thống xử lý một ảnh gồm các bước sau 
Đầu tiên, lấy ảnh từ thư viện trên máy tính hoặc ảnh thu trực tiếp từ Webcam, ví 
dụ như hình 5.2 bên dưới là ảnh có cả khuôn mặt và bàn tay. 
 
 
 
 
 
 
 
 
Hình 5.1. Ảnh trước và sau khi lọc trung vị 
a. Ảnh bị nhiễu muối tiêu  
b. Ảnh sau khi khử nhiễu  
Hình 5.2. Hình ảnh thu vào từ webcam 
CHƯƠNG 5: KẾT QUẢ_NHẬN XÉT_ĐÁNH GIÁ 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             52 
 
Sau khi lấy ảnh vào, nếu không có khuôn mặt người thì chương trình sẽ chuyển 
sang bước tiếp theo để xử lý. Nếu phát hiện khuôn mặt người trong ảnh , khi đó chương 
trình sẽ dựa vào kết quả trả về của vị trí và diện tích khuôn mặt để tô đen phần diện tích 
được đánh dấu là khuôn mặt như hình 5.3 bên dưới, sau đó chuyển sang bước kế tiếp. 
 
 
 
 
 
 
Sau khi loại bỏ được khuôn mặt có trong ảnh, ảnh sẽ được chuyển đổi sang không 
gian màu YCbCr để phân tách màu da, kết quả trả về của quá trình này sẽ được một ảnh 
nhị phân chỉ chứa những vùng được xem là màu da (những điểm ảnh màu trắng) như 
hình 5.4. Tuy nhiên ảnh có thể có nhiều vùng không phải màu da thật do một số đồ vật 
có màu gần giống với màu da người cũng bị giữ lại trong quá trình trích lọc màu da. 
 
  
 
 
 
  
 
 
Giải pháp đưa ra để khắc phục vấn đề loại bỏ các vùng không mong muốn xuất 
hiện trong ảnh không phải da để thu được chính xác vùng da chứa bàn tay (xem hình 
5.5) bằng cách tính tổng diện tích các điểm ảnh là màu da trong ảnh. Sau đó ta chỉ giữ 
lại vùng nào chứa tổng diện tích điểm ảnh lớn nhất và xem đó là vùng chứa bàn tay. 
 
 
 
 
 
 
Hình 5.3. Ảnh sau khi được loại bỏ khuôn mặt 
Hình 5.4. Ảnh sau khi lọc màu da 
Hình 5.5. Ảnh chỉ chứa vùng da tay 
CHƯƠNG 5: KẾT QUẢ_NHẬN XÉT_ĐÁNH GIÁ 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             53 
 
Sau khi xác định được bàn tay, tiến hành phát hiện và cắt vùng ảnh chỉ chứa bàn 
tay vì ảnh thu vào có thể có một phần cánh tay của người sử dụng, do đó cần loại bỏ đi 
phần cánh tay này để việc nhận dạng về sau được chuẩn xác. Kết quả ta được một ảnh 
chỉ chứa bàn tay từ cổ tay đến ngón tay như trong hình 5.6. 
 
 
 
 
 
 
 
 
 
 
Từ ảnh trên tiến hành tìm trọng tâm của bàn tay, sau đó tính khoảng cách ngắn 
nhất từ trọng tâm đó đến đường biên của bàn tay (như hình 5.7). 
 
 
  
 
 
 
 
 
 
 
 
 
 
 
 
Rồi thực hiện liên tiếp 2 phép co ảnh và giãn ảnh để loại bỏ các phần nhô ra nhưng 
vẫn giữ được cấu trúc của ảnh, kết quả trả về chỉ giữ lại vùng lòng bàn tay như hình 5.8. 
Hình 5.6. Kết quả sau khi cắt lấy bàn tay 
(Cx, Cy) 
x 
y 
O 
(x,y
) 
Hình 5.7. Tính khoảng cách từ trọng tâm đến biên bàn tay 
CHƯƠNG 5: KẾT QUẢ_NHẬN XÉT_ĐÁNH GIÁ 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             54 
 
 
 
 
 
 
 
 
Cuối cùng, để đếm được số ngón tay của bàn tay, ta tiến hành lấy ảnh chỉ chứa bàn 
tay trừ đi ảnh đã qua phép giãn ảnh và co ảnh, các vùng này sẽ chứa các ngón tay và cả 
những vùng nhấp nhô do sự sai khác giữa 2 ảnh trong quá trình xử lý như hình 5.9a, để 
xóa bỏ những vùng thừa này ta làm theo cách đã thực hiện trước đó: tính tổng diện tích 
các điểm ảnh màu trắng, chỉ giữ lại những vùng có tổng diện tích lớn hơn 10% của tổng 
này. Khi đó kết quả trả về ảnh sẽ được loại bỏ đi những vùng thừa không mong muốn 
và chỉ giữ lại những ngón tay như trong hình 5.9b. Việc tìm và đếm có bao nhiêu vùng 
phân biệt trong ảnh sẽ giúp chúng ta biết được có bao nhiêu ngón tay, như trong hình 
5.9b là 5 ngón tay.  
 
 
 
 
 
 
 
 
 
 
 
5.2. ĐÁNH GIÁ HỆ THỐNG 
 
Sau khi hoàn tất quá trình nghiên cứu, hệ thống đã hoạt động và đạt được mục tiêu 
ban đầu đề ra. Nhận dạng được 5 cử chỉ bàn tay, nhận dạng cả ảnh tĩnh và ảnh thu vào 
từ webcam, tuy nhiên muốn cho ra kết quả nhận dạng chính xác cao, ảnh thu vào phải 
thỏa các yêu cầu bên dưới. 
Hình 5.8. Kết quả thu được sau hai phép giãn ảnh và co ảnh 
Hình 5.9. Kết quả cuối cùng sau khi nhận dạng 
a. Ảnh sau khi trừ 
b. Ảnh chỉ chứa 
các vùng ngón tay 
CHƯƠNG 5: KẾT QUẢ_NHẬN XÉT_ĐÁNH GIÁ 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             55 
 
 
 
 
 
 
 
 
 
 
Như trong hình 5.10, minh họa về khoảng cách giữa bàn tay và webcam, một ảnh 
thu vào được xem là thỏa điều kiện về khoảng cách thì bàn tay phải nằm trọn trong 
khung ảnh, và khoảng cách tối đa giữa bàn tay và Webcam không quá 50cm. Nếu khoảng 
cách lớn hơn 50cm thì ảnh nhận dạng sẽ bị lỗi như hình 5.11b. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Hình 5.10. Minh họa về khoảng cách giữa tay và webcam 
a. Khoảng cách gần <50cm 
b. Khoảng cách xa 1m 
a. Nhận dạng ảnh ở khoảng cách <50cm 
b. Nhận dạng ảnh ở khoảng cách xa >50cm 
Hình 5.11. Kết quả nhận dạng ở khoảng cách xa và gần 
Hình 5.12. Minh họa về điều kiện chiếu sáng khác nhau 
b. Ảnh chụp khi thiếu 
ánh sáng 
b. Ảnh chụp khi bị chói 
nắng 
CHƯƠNG 5: KẾT QUẢ_NHẬN XÉT_ĐÁNH GIÁ 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             56 
 
Khi thu ảnh vào cũng phải quan tâm đến độ sáng của ảnh, ảnh thu vào phải có độ 
sáng vừa phải, không được chói quá hoặc mờ quá như hình 5.12. Ảnh thu vào chói hoặc 
mờ quá thì hệ thống nhận dạng màu da có thể sai, dẫn đến kết quả nhận dạng ảnh không 
chính xác như trong hình 5.13 bên dưới.  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
a. Kết quả nhận dạng ảnh trong điều kiện thiếu ánh sáng 
Hình 5.13. Kết quả nhận dạng trong điều kiện chiếu sáng khác nhau 
c. Kết quả nhận dạng ảnh trong điều kiện chiếu sáng thích hợp 
b. Kết quả nhận dạng ảnh trong điều kiện chói nắng 
CHƯƠNG 5: KẾT QUẢ_NHẬN XÉT_ĐÁNH GIÁ 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             57 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Muốn cho ảnh nhận diện có độ chính xác cao, ảnh thu vào cũng phải đảm bảo độ 
mở giữa các ngón tay phải rõ ràng như hình 5.14, bên cạnh đó góc chụp bàn tay cũng 
không kém phần quan trọng, bàn tay phải được chụp chính diện theo phương thẳng đứng 
và đầu các ngón tay phải hướng lên, tay có thể nghiêng lệch một góc không quá 30° 
theo phương thẳng đứng, bàn tay không được ngả ngửa hoặc sấp xuống như hình 5.15. 
 
 
 
 
 
 
 
 
 
 
a. Sai 
Hình 5.14. Minh họa về độ mở giữa các ngón 
tay 
b. Đúng 
Hình 5.16. Kết quả nhận dạng ảnh về độ mở giữa các ngón tay 
b. Đúng 
a. Sai 
Hình 5.15. Minh họa về góc chụp của bàn tay 
CHƯƠNG 5: KẾT QUẢ_NHẬN XÉT_ĐÁNH GIÁ 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             58 
 
Hình 5.16 ở trên minh họa về khả năng nhận dạng chính xác khi độ mở giữa các 
ngón tay rõ ràng (như hình 5.16b), và nhận dạng sai khi các ngón tay của bàn tay khép 
lại với nhau (như hình 5.16a). 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
a. Minh họa về bàn tay sấp 
b. Minh họa về bàn tay nghiêng một góc quá 30°  
Hình 5.17. Kết quả nhận dạng các trường hợp góc chụp khác nhau 
c. Minh họa về bàn tay ngửa 
CHƯƠNG 5: KẾT QUẢ_NHẬN XÉT_ĐÁNH GIÁ 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             59 
 
 
Tương tự trong hình 5.17, ví dụ minh họa về kết quả các trường hợp nhận dạng sai 
khi bàn tay sấp (xem hình a), bàn tay nghiêng quá 30° (xem hình b) và bàn tay ngửa 
(xem hình c). 
 
Ngoài ra, ảnh chụp bị nhòe do rung tay hay lấy nét sai, ảnh có màu nền giống với 
màu da, ảnh có bàn tay che một phần, hoặc che bởi khuôn mặt như hình 5.18 đều cho 
kết quả nhận dạng không chính xác như hình 5.19. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Hình 5.18. Minh họa về ảnh mờ, ảnh có bàn tay che một phần 
khuôn mặt 
Hình a. Kết quả nhận dạng khi ảnh chụp bị nhòe 
Hình b. Kết quả nhận dạng khi bàn tay đè 
lên khuôn mặt 
Hình 5.19. Kết quả nhận dạng khi ảnh chụp bị nhòe và bàn tay chạm vào 
khuôn mặt 
CHƯƠNG 5: KẾT QUẢ_NHẬN XÉT_ĐÁNH GIÁ 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             60 
 
 
 
 
 
 
 
 
 
 
 
Và yếu tố cuối cùng làm kết quả nhận dạng sai là do khi co bàn tay lại phải hạn 
chế tối đa các vùng nhấp nhô do các ngón tay gây ra (như hình 5.20a), vì các khớp tay 
nhô cao quá hệ thống nhận dạng sẽ hiểu đó là một ngón tay và đếm luôn dẫn đến kết 
quả cho ra bị sai. 
 
 
 
 
 
 
 
 
 
 
 
Hình 2.21 ở trên cho thấy kết quả nhận dạng sẽ chính xác cao khi hạn chế sự nhấp 
nhô của các ngón tay. 
 
 
 
 
a. Sai 
b. Đúng 
Hình 5.20. Minh họa về độ nhấp nhô của các ngón tay khi co lại 
Hình 5.21. Kết quả nhận dạng khi hạn chế nhấp nhô của 
ngón tay 
CHƯƠNG 5: KẾT QUẢ_NHẬN XÉT_ĐÁNH GIÁ 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             61 
5.3. KẾT QUẢ THỐNG KÊ 
 
Với mỗi cử chỉ tay, nhóm chọn ra 50 ảnh để chương trình nhận dạng. Kết quả 
chạy chương trình được ghi lại trong bảng 5.1: 
Bảng 5.1. Kết quả chạy chương trình nhận dạng ảnh 
Cử chỉ tay 
Ảnh mẫu 
Số ảnh thử 
Xác suất nhận 
dạng thành công 
1 ngón tay 
 
 
 
 
 
 
50 
94 % 
2 ngón tay 
 
 
 
 
 
50 
94 % 
3 ngón tay 
 
 
 
 
 
 
50 
96 % 
4 ngón tay 
 
 
 
 
 
 
50 
96 % 
CHƯƠNG 5: KẾT QUẢ_NHẬN XÉT_ĐÁNH GIÁ 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             62 
5 ngón tay 
 
 
 
 
 
 
50 
98 % 
Bàn tay co (nắm tay) 
 
 
 
 
 
 
50 
94 % 
 
Kết quả trong bảng 5.1 cho thấy: Giải thật mà đồ án này xây dựng tuy khá đơn 
giản nhưng có khả năng phát hiện các cử chỉ tay với độ chính xác rất cao (hơn 94%). 
Lấy cử chỉ bàn tay xòe 3 ngón làm ví dụ, độ chính xác của chương trình với cử chỉ này 
là 48 ảnh đúng trong tổng số 50 ảnh thử nghiệm. Trong khi đó, với cử chỉ tay xòe năm 
ngón thì độ chính xác là 98% bởi khi xòe năm ngón thì các điểm nhấp nhô của các khớp 
ngón tay sẽ hạn chế tới mức tối thiểu.  
Do đó có thể thấy được điểm đặc biệt của giải thuật này là ở tính đơn giản của 
nó. Chương trình được viết khá ngắn gọn, không quá phức tạp nhưng vẫn đạt được hiệu 
quả của bài toán “nhận dạng chử chỉ bàn tay”. Nhưng cũng thấy được một hạn chế của 
hướng đi này là trong ảnh cần xử lý phải có sự xất hiện của bàn tay, nếu không chương 
trình sẽ nhận dạng sai. 
Cũng chú ý rằng các ảnh được giới thiệu trong cột ảnh mẫu ở bảng 5.1 là những 
ảnh được xem là lý tưởng. Trong thực tế để chương trình làm việc đúng và cho hiệu quả 
như đã trình bày thì chất lượng ảnh thu vào phải đảm bảo các điều kiện đặt ra ở phần 
giới thiệu của đồ án này. 
 
 
CHƯƠNG 6: KẾT LUẬN VÀ HƯỚNG PHÁT TRIỂN 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             63 
Chương 6. KẾT LUẬN VÀ HƯỚNG PHÁT TRIỂN 
6.1. KẾT LUẬN 
Chương trình nhận dạng có thể trích xuất được vùng bàn tay có trong ảnh, đếm 
được số ngón tay. 5 LED chỉ thị trên mạch điều khiển hoạt động tốt theo lệnh điều khiển 
từ chương trình. Hệ thống nhận dạng được lắp ráp theo kiểu từng phần có thể tháo rời 
dễ dàng. Nhóm đã xây dựng thành công chương trình nhận dạng trên máy tính, hệ thống 
thử nghiệm hoạt động ổn định, tốt như mong đợi. 
6.2. HƯỚNG PHÁT TRIỂN 
Đề tài “Điều khiển thiết bị bằng cử chỉ tay thông qua xử lý ảnh” là một bước 
nghiên cứu khởi đầu cho nhiều dự án mang tính mới lạ. Có thể phát triển thành máy chơi 
“oẳn tù xì” với con người. Theo đó, máy có khả năng chụp lại cử chỉ tay của người chơi 
rồi xử lý và trả lại kết quả sao cho có thể “ăn” được người chơi theo luật chơi của trò 
chơi dân gian này. 
Hoặc đề tài có thể mở rộng hơn để đếm được các số đếm từ 0 tới 10 áp dụng vào 
phần mềm học đếm số cho các em nhỏ. Chương trình có thể đưa ra một số phép tính 
đơn giản (ví dụ 1+1=?) và hỏi xem đáp số là bao nhiêu? Bằng việc chụp lại ảnh bàn tay 
của bé, qua xử lý, phần mềm sẽ biết bé trả lời đúng hay sai và hiển thị kết quả lên một 
màn hình  kèm theo âm thanh để kích thích bé vừa học vừa chơi. 
 
 
 
 
 
 
 
 
 
 
 
 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             64 
TÀI LIỆU THAM KHẢO 
 
[1] Ram Pratap Sharma and Gyanendra K. Verma, “Human Computer Interaction 
using Hand Gesture”, National Institute of  Technology Kurukshetra, 2015. 
[2] N. Dhruva, Sudhir Rao Rupanagudi, H.N. Neelkant Kashyap, “Novel 
Algorithm for Image Processing Based Hand Gesture Recognition and Its 
Application in Sucurity”, 2011.   
[3] Trần Thanh Viên, “Mạch Điều Khiển Nhiệt Độ”, ĐH Bách Khoa - ĐH Đà 
Nẵng, 2011. 
[4] Trần Ngọc Thăng và Trần Thành Trung, “Nhận diện cử chỉ bàn tay”, Đồ Án 
Tốt Nghiệp ĐH, Trường ĐH Sư Phạm Kỹ Thuật Tp.HCM, 2013. 
[5] Lê Việt Dũng, “Nghiên cứu kỹ thuật nhận dạng bàn tay người”, luận văn 
thạc sĩ, Học Viện Công Nghệ Bưu Chính Viễn Thông, 2013. 
[6] Lê Mạnh Linh, “Nhận dạng cử chỉ bàn tay ứng dụng trong điều khiển thiết bị 
điện gia dụng”, luận văn thạc sĩ, Trường Đại học Công nghệ Thông Tin và Truyền 
thông, 2015. 
[7] Nguyễn Đình Phú, “Giáo trình vi xử lý II”, NXB ĐH Quốc Gia Tp.HCM, 
2007. 
[8] Lê Thị Thu Thảo, “thiết kế mạch nguồn một chiều ổn áp có điện áp ra thay đổi 
(0-5V) 3A”, Đồ án 1. 
[9] D.Sparsha and G.Vandana, “Remote Controlled Metal Detecting Robot with 
Remote Image Transmission”, Sridevi Women’s Engineering College, 2010. 
 
 
 
 
 
 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             65 
PHỤ LỤC 
 
1. Chương trình chính 
delete(gcf); 
close all; 
clear all; 
imaqreset; 
clc; 
f = figure; 
set(f,... 
    'Visible','off', ... 
    'name', 'DO AN TOT NGHIEP',... 
    'numbertitle','off', ... 
    'Color', [0.925 0.914 0.847],... 
    'position',[360,500,550,350]); 
set(f,'KeyPressFcn',@keyDownListener); 
set(f, 'KeyReleaseFcn', @keyUpListener); 
set(f,'CurrentCharacter','@'); % set to a dummy character 
%% ------- Device ID ------- 
htext1 = uicontrol('Style','text','String','OUTPUT',... 
'FontWeight', 'bold', ... 
'Position',[330,325,60,15],... 
'BackgroundColor',[0.9 0.9 0.9]); 
% -------------------------------------- 
out1 = uicontrol('Style','text','String','OUT1',... 
'FontWeight', 'bold', ... 
'Position',[226,254,40,15], ... 
'BackgroundColor',[0.9 0.9 0.9]); 
% -------------------------------------- 
out2 = uicontrol('Style','text','String','OUT2',... 
'FontWeight', 'bold', ... 
'Position',[282,254,40,15], ... 
'BackgroundColor',[0.9 0.9 0.9]); 
% -------------------------------------- 
out3 = uicontrol('Style','text','String','OUT3',... 
'FontWeight', 'bold', ... 
'Position',[338,254,40,15], ... 
'BackgroundColor',[0.9 0.9 0.9]); 
% -------------------------------------- 
out4 = uicontrol('Style','text','String','OUT4',... 
'FontWeight', 'bold', ... 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             66 
'Position',[395,254,40,15], ... 
'BackgroundColor',[0.9 0.9 0.9]); 
% -------------------------------------- 
out5 = uicontrol('Style','text','String','OUT5',... 
'FontWeight', 'bold', ... 
'Position',[450,254,40,15], ... 
'BackgroundColor',[0.9 0.9 0.9]); 
%% -------- ORIGINAL IMAGE ------------- 
horiginal_image = uipanel('Parent',f,'Title','Original Image',... 
'FontWeight', 'bold', ... 
'TitlePosition','centertop',... 
'Position',[.11 .54 .275 .43]); % x ->, y-^ w h 
%---------- RESULT IMAGE -------------- 
hresult_image = uipanel('Parent',f,'Title','Result Image',... 
'FontWeight', 'bold', ... 
'TitlePosition','centertop',... 
'Position',[.11 .1 .275 .43]); % x ->, y-^ w h 
% hpopup = uicontrol('Style','popupmenu',... 
% 'String',{'Huu Sang',... 
% 'Kim Chi'},... 
% 'Position',[300,300,200,25],... 
% 'Callback',{@popup_menu_Callback}); 
%% -------- PROGRAM AREA -------- 
pha = uipanel('Parent',f,'Title','Program',... 
'FontWeight', 'bold', ... 
'TitlePosition','centertop',... 
'Position',[.40 .29 .51 .4]); 
% ----------- SOURCE - PROCESS - SYS ----------- 
ph1 = uipanel('Parent',pha,'Title','Source',... 
'FontWeight', 'bold', ... 
'TitlePosition','centertop',... 
'Position',[.02 .05 .3 .9]); 
ph2 = uipanel('Parent',pha,'Title','Process',... 
'FontWeight', 'bold', ... 
'TitlePosition','centertop',... 
'Position',[.35 .05 .3 .9]); 
ph3 = uipanel('Parent',pha,'Title','System',... 
'FontWeight', 'bold', ...     
'TitlePosition','centertop',... 
'Position',[.68 .05 .3 .9]); 
%% --------- SOURCES ---------- 
hdisk = uicontrol(ph1,'Style','pushbutton','String','Disk',... 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             67 
'Position',[5 65 70 25],... 
'Callback','disk'); 
hvideo = uicontrol(ph1,'Style','pushbutton','String','Video',... 
'Position',[5 35 70 25],... 
'Callback','wait,webcam'); 
hsvideo = uicontrol(ph1,'Style','pushbutton','String','Stop Video',... 
'Position',[5 5 70 25],... 
'Callback','stopvideo'); 
%% -------- PROCESS --------- 
hprocess = uicontrol(ph2,'Style','pushbutton','String','Process',... 
'Position',[5,65,70,25],... 
'Callback','wait,processing'); 
hshow = uicontrol(ph2,'Style','pushbutton','String','Show',... 
'Position',[5,35,70,25],... 
'Callback','show'); 
%% --------- SYSTEM --------- 
hrestart = uicontrol(ph3,'Style','pushbutton', 'String','Restart',... 
'Position',[5,65,70,25],... 
'Callback','stopvideo,GUI'); 
habout = uicontrol(ph3,'Style','pushbutton','String','About',... 
'Position',[5,35,70,25],... 
'Callback','about'); 
hexit = uicontrol(ph3,'Style','pushbutton','String','Exit',... 
'Position',[5,5,70,25],... 
'Callback','thoat'); 
%% ---------- COMMUNICATION ------------ 
phb = uipanel('Parent',f,'Title','Communication',... 
'FontWeight', 'bold', ...     
'TitlePosition','centertop',... 
'Position',[.40 .1 .51 .15]); 
% ------------ BAURATE ------------- 
tb1 = uipanel(phb,'Title','Baud rate',... 
'FontWeight', 'bold', ...     
'TitlePosition','centertop',... 
'Position',[.02 0.1 .3 .9]); 
% -------------------------------------- 
hbaud_rate = uicontrol(tb1,'Style','text','String','9600',... 
'FontWeight', 'bold', ... 
'Position',[10 2 60 15]); 
%------------ PARITY ---------- 
tb2 = uipanel(phb,'Title','Parity',... 
'FontWeight', 'bold', ...     
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             68 
'TitlePosition','centertop',... 
'Position',[.35 .1 .3 .9]); 
% ------------------------------------- 
hparity = uicontrol(tb2,'Style','text','String','N',... 
'FontWeight', 'bold', ... 
'Position',[10 2 60 15]); 
%------------ DATA BIT ---------- 
tb3 = uipanel(phb,'Title','Data bits',... 
'FontWeight', 'bold', ...     
'TitlePosition','centertop',... 
'Position',[.68 .1 .3 .9]); 
% -------------------------------------- 
hdatabit = uicontrol(tb3,'Style','text','String','8',... 
'FontWeight', 'bold', ... 
'Position',[10 2 60 15]); 
%% -------------------------------------- 
align([htext1,pha,phb],'Center','None'); 
align([horiginal_image,hresult_image],'Center','None'); 
align([hdisk,hvideo,hsvideo],'Center','None'); 
align([hprocess,hshow],'Center','None'); 
align([hrestart,habout,hexit],'Center','None'); 
align([tb1,tb2,tb3],'Center','None'); 
align([hbaud_rate,hparity,hdatabit],'Center','None'); 
set([f,htext1,pha,phb,ph1,ph2,ph3,... 
horiginal_image,hresult_image, ... 
hdisk,hvideo,hsvideo,hprocess,hshow,hrestart,habout,hexit,... 
tb1,tb2,tb3,... 
out1,out2,out3,out4,out5,... 
hbaud_rate,hparity,hdatabit],... 
'Units','normalized'); 
%% ------------ SHOW IMAGE ------------- 
subplot(4,6,[3 4 5 6], 'replace'); 
imshow('F:\SPKT\DATN\CODE\Data\Devices\OFF.jpg','InitialMagnification','
fit'); 
subplot(4,6,[1 2 7 8], 'replace'); 
imshow('F:\SPKT\DATN\CODE\Data\LOGO_HCMUTE.jpg', 
'InitialMagnification','fit'); 
subplot(4,6,[13 14 19 20], 'replace'); 
imshow('F:\SPKT\DATN\CODE\Data\LOGO_HCMUTE.jpg', 
'InitialMagnification','fit'); 
%% ------- DISPLAY GUI ------------------ 
movegui(f,'center') 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             69 
set(f,'Visible','on'); 
%--------- End of file ------------ 
2. Chương trình con đọc ảnh từ thư mục: DISK 
    [filename,pathname] = uigetfile({'*.jpg';'Image files';'All file'}); 
    y =[pathname, filename]; 
    b = imread(y); 
% goc anh goc 
        subplot(4,6,[1 2 7 8], 'replace'); 
        imshow(b) 
% hien anh goc 
    imwrite(b,'image.jpg'); 
3. Chương trình con thu ảnh từ webcam: WEBCAM 
clear all; 
clc; 
%% --------- video config -------------- 
vid = videoinput('winvideo', 2, 'YUY2_640x480'); 
set(vid, 'FramesPerTrigger', Inf); 
set(vid, 'ReturnedColorspace', 'rgb') 
% set(vid,'TimerPeriod',0.5); 
vid.FrameGrabInterval = 3; 
start(vid); 
%% ------------------------------- 
while(1) 
img_orig = getsnapshot(vid); 
img_orig = imresize(img_orig, 0.5); 
img_orig = img_orig(1:end,end:-1:1,:); 
height = size(img_orig,1); 
width = size(img_orig,2); 
bin = zeros(height,width); 
% ------ SHOW ORIGINAL IMAGE -------- 
subplot(4,6,[1 2 7 8], 'replace'); 
imshow(img_orig); % original image 
%% ---------- face detect -------------------- 
FDetect = vision.CascadeObjectDetector; 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             70 
BB = step(FDetect,img_orig); 
% hold on; 
if size(BB,1)~= 0 
    for i = 1:size(BB,1) 
%         rectangle('Position',BB(i,:),'LineWidth',1,'LineStyle','-','EdgeColor','r'); 
% ------------ remove face ------------- 
        RGB = insertShape(img_orig, 'FilledRectangle', BB(i, :),'Color', 
'black','Opacity', 1);  
    end 
    img_ycbcr = rgb2ycbcr(RGB); 
else 
    img_ycbcr = rgb2ycbcr(img_orig); 
end 
%% ---------------- Skin Detect ------------------------ 
%Convert the image from RGB to YCbCr 
%img_ycbcr = rgb2ycbcr(RGB); 
Cb = img_ycbcr(:,:,2); 
Cr = img_ycbcr(:,:,3); 
[r,bantay,v] = find(Cb>=77 & Cb<=127 & Cr>=133 & Cr<=173); 
numind = size(r,1); 
% ------- Mark Skin Pixels ---------- 
for i=1:numind 
%     out(r(i),bantay(i),:) = [0 0 255]; 
    bin(r(i),bantay(i)) = 1; 
end 
%-------------- loc nhieu ----------------- 
    bn = imfill(bin,'hole');%lap day lo trong 
    dientich = bwarea(bn); 
    bn=bwareaopen(bn,round(dientich*0.3));% loai bo vung có dien tích nho hon 
30% 
    bn = medfilt2(bn, [3 3]); %filtering 
    bantay=bn; 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             71 
%% --------------- hand extract ------------- 
 ya=sum(bantay,1);%tong theo cot  
 [cy, y]=max(ya);% c la tong pixel lon nhat, y la tri so cot max 
 xa=sum(bantay,2); 
 [cx, x]=max(xa); 
 tong=sum(bantay(x:height,:),2); 
for i=1:length(tong) 
    if tong(i)< 0.5*cx 
    break; 
    end 
end 
 y1= (i+x);% vi tri hang co tong so pixel trang nho nhat tu vi tri max o giua tinh 
xuong duoi 
for i=x:-1:1 % chay tu diem x max cho den vi tri ban dau,-1 bc nhay 
    if sum(bantay(i,:))==0 % xet tai vi tri hang cuoi cung 
    break; 
    end 
end 
y2=i; % hang tren cung 
for i=y:width 
    if sum(bin(:,i))==0 
    break; 
    end 
end 
x1=i; % cot phia ben phai cua ban tay 
for i=y:-1:1 
    if sum(bantay(:,i))==0 
    break 
    end 
end 
x2=i; 
h=y1-y2;% chieu cao  
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             72 
w=x1-x2;% chieu rong 
bantay1=imcrop(bantay,[x2 y2 w h]); 
out = imresize(bantay1,[h*2 h]); 
h = size(out,1); 
w = size(out,2); 
%---------------------------------------- 
out=imdilate(out,strel('diamond',4));% lam gian 
%se = strel('line',11,100); out = imdilate(out,se); 
%retain largest only 
res=out; 
cc=bwconncomp(res);% 
arr=(cellfun('length',cc.PixelIdxList)); 
newLabel=res;% 
if ~isempty(round(arr)) 
    msz=0; 
    for i=1:length(arr) 
        if msz<arr(i:i) 
            msz=arr(i:i); 
            index=i; 
        end 
    end 
    labels=labelmatrix(cc); 
    newLabel=(labels==index); 
    out=newLabel; 
end 
out=imfill(out,'holes'); 
stats=regionprops(out,'Centroid'); 
 
if ~isempty(stats) 
    cx=stats.Centroid(1); 
    cy=stats.Centroid(2); 
    %find the nearest countour point 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             73 
    boundary=bwboundaries(out); 
    minDist=2*h*w; 
    bImg=uint8(zeros(h,w));% 
    for i=1:length(boundary) 
        cell=boundary{i,1}; 
        for j=1:length(cell) 
            y=cell(j,1); 
            x=cell(j,2); 
            sqrDist=(cx-x)*(cx-x)+(cy-y)*(cy-y); 
            bImg(x,y)=255; 
            if(sqrDist<minDist) 
                minDist=sqrDist; 
            end 
        end 
    end 
    sed=strel('disk',round(sqrt(minDist)/2)); 
    final=imerode(out,sed); 
    final=imdilate(final,sed); 
    final=out-final; 
    final(:,1) = 0; final(:,end) = 0; 
    final(1,:) = 0; final(end,:) = 0; 
    dientich = bwarea(final); 
    final=bwareaopen(final,round(dientich*0.1));%  
 
final=imerode(final,strel('disk',5));% 
 [~,num]=bwlabel(final,8); 
%% -------- SHOW RESULT IMAGE ----------- 
    subplot(4,6,[13 14 19 20], 'replace'); 
    imshow(final); 
        subplot(4,6,[3 4 5 6], 'replace'); 
        if num ==0  
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             74 
     
imshow('F:\SPKT\DATN\CODE\Data\Devices\OFF.jpg','InitialMagnification','
fit'); 
    elseif num ==1  
        
imshow('F:\SPKT\DATN\CODE\Data\Devices\1.jpg','InitialMagnification','fit')
; 
    elseif num ==2 
        
imshow('F:\SPKT\DATN\CODE\Data\Devices\2.jpg','InitialMagnification','fit')
;     
    elseif num ==3 
        
imshow('F:\SPKT\DATN\CODE\Data\Devices\3.jpg','InitialMagnification','fit')
;     
    elseif num ==4 
        
imshow('F:\SPKT\DATN\CODE\Data\Devices\4.jpg','InitialMagnification','fit')
;     
    elseif num ==5 
        
imshow('F:\SPKT\DATN\CODE\Data\Devices\5.jpg','InitialMagnification','fit')
;               
    else  
       
imshow('F:\SPKT\DATN\CODE\Data\Devices\error.jpg','InitialMagnification','
fit');  
    end 
else 
num=0; 
final = zeros(size(out)); 
subplot(4,6,[13 14 19 20], 'replace'); 
imshow(out); 
subplot(4,6,[3 4 5 6], 'replace'); 
imshow('F:\SPKT\DATN\CODE\Data\Devices\error.jpg','InitialMagnification','
fit'); 
end 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             75 
% hold off; 
pause(0.001); 
%% ---------- check for keys & exit ------------------ 
  k=get(gcf,'CurrentCharacter'); 
  if k~='@' % has it changed from the dummy character? 
    set(gcf,'CurrentCharacter','@'); % reset the character 
    % now process the key as required 
    if k == 'q'  
        break;  
    end  
  end 
%% ------- COMMUNICATION --------- 
  run uart.m; 
end 
stop(vid); 
flushdata(vid); 
4. Chương trình con thoát khỏi chế độ webcam: STOP_VIDEO 
set(gcf,'CurrentCharacter','q'); % reset the character 
a = exist('vid', 'var');% co ton tai bien var ? 
if a==1 
    stop(vid); 
    flushdata(vid); 
end 
subplot(4,6,[1 2 7 8], 'replace'); 
imshow('F:\SPKT\DATN\CODE\Data\LOGO_HCMUTE.jpg', 
'InitialMagnification','fit'); 
subplot(4,6,[13 14 19 20], 'replace'); 
imshow('F:\SPKT\DATN\CODE\Data\LOGO_HCMUTE.jpg', 
'InitialMagnification','fit'); 
5. Chương trình con xử lý ảnh. 
clc; 
img_orig = imread('image.jpg'); 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             76 
img_orig = imresize(img_orig, 0.5); 
height = size(img_orig,1); 
width = size(img_orig,2); 
%Initialize the output images 
bin = zeros(height,width); 
%---------- face detect -------------------- 
FDetect = vision.CascadeObjectDetector; 
BB = step(FDetect,img_orig); 
hold on; 
if size(BB,1)~= 0 
    for i = 1:size(BB,1) 
       rectangle('Position',BB(i,:),'LineWidth',1,'LineStyle','-','EdgeColor','r'); 
        %------------ remove face --------------------- 
        RGB = insertShape(img_orig, 'FilledRectangle', BB(i, :),'Color', 
'black','Opacity', 1);  
    end 
    img_ycbcr = rgb2ycbcr(RGB); 
else 
    img_ycbcr = rgb2ycbcr(img_orig); 
end 
%----------------------------------------------- 
%---------------- Detect Skin----------------------------------- 
%Convert the image from RGB to YCbCr 
Cb = img_ycbcr(:,:,2); 
Cr = img_ycbcr(:,:,3); 
[r,bantay,v] = find(Cb>=77 & Cb<=127 & Cr>=133 & Cr<=173); 
numind = size(r,1); 
%Mark Skin Pixels 
for i=1:numind 
%     out(r(i),bantay(i),:) = [0 0 255]; 
    bin(r(i),bantay(i)) = 1; 
end 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             77 
%-------------- loc nhieu ----------------- 
    bn = imfill(bin,'hole');%lap day lo trong 
    dientich = bwarea(bn); 
    bn=bwareaopen(bn,round(dientich*0.3));% loai bo vung có dien tích nho hon 
30% 
    bn = medfilt2(bn, [3 3]); %filtering 
    bantay=bn; 
%------------------------------------------- 
%--------------- tach ban tay --------------------------------- 
 ya=sum(bantay,1);%tong theo cot  
 [cy, y]=max(ya);% c la tong pixel lon nhat, y la tri so cot max 
 xa=sum(bantay,2); 
 [cx, x]=max(xa); 
 tong=sum(bantay(x:height,:),2); 
for i=1:length(tong) 
    if tong(i)< 0.5*cx 
    break; 
    end 
end 
 y1= (i+x);% vi tri hang co tong so pixel trang nho nhat tu vi tri max o giua tinh 
xuong duoi 
for i=x:-1:1 % chay tu diem x max cho den vi tri ban dau,-1 bc nhay 
    if sum(bantay(i,:))==0 % xet tai vi tri hang cuoi cung 
    break; 
    end 
end 
y2=i; % hang tren cung 
for i=y:width 
    if sum(bin(:,i))==0 
    break; 
    end 
end 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             78 
x1=i; % cot phia ben phai cua ban tay 
for i=y:-1:1 
    if sum(bantay(:,i))==0 
    break 
    end 
end 
x2=i; 
h=y1-y2;% chieu cao  
w=x1-x2;% chieu rong 
bantay1=imcrop(bantay,[x2 y2 w h]); 
out = imresize(bantay1,[h*2 h]); 
% out = bantay1; 
h = size(out,1); 
w = size(out,2); 
%---------------------------------------- 
%filtering 
% out=im2bw(out); 
%out=bwareaopen(out,100); 
out=imdilate(out,strel('diamond',4));% lam gian 
%se = strel('line',11,100); out = imdilate(out,se); 
%retain largest only 
res=out; 
cc=bwconncomp(res); 
arr=(cellfun(@numel,cc.PixelIdxList)); 
newLabel=res; 
if ~isempty(round(arr)) 
    msz=0; 
    for i=1:length(arr) 
        if msz<arr(i:i) 
            msz=arr(i:i); 
            index=i; 
        end 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             79 
    end 
    labels=labelmatrix(cc); 
    newLabel=(labels==index); 
    out=newLabel; 
end 
out=imfill(out,'holes'); 
stats=regionprops(out,'Centroid'); 
if ~isempty(stats) 
    cx=stats.Centroid(1); 
    cy=stats.Centroid(2); 
    %find the nearest countour point 
    boundary=bwboundaries(out); 
    minDist=2*h*w; 
%     mx=cx; 
%     my=cy; 
    bImg=uint8(zeros(h,w));% 
 
    for i=1:length(boundary) 
        cell=boundary{i,1}; 
        for j=1:length(cell) 
            y=cell(j,1); 
            x=cell(j,2); 
            sqrDist=(cx-x)*(cx-x)+(cy-y)*(cy-y); 
            bImg(x,y)=255; 
            if(sqrDist<minDist) 
                minDist=sqrDist; 
%                 mx=x; 
%                 my=y; 
            end 
        end 
    end 
    sed=strel('disk',round(sqrt(minDist)/2)); 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             80 
    final=imerode(out,sed); 
    final=imdilate(final,sed); 
    final=out-final; 
    final(:,1) = 0; final(:,end) = 0; 
    final(1,:) = 0;  
    %final(end,:) = 0; 
    final=imclearborder(final); 
%     final=bwareaopen(final,100); 
    dientich = bwarea(final); 
    final=bwareaopen(final,round(dientich*0.08));%  
 
final=imerode(final,strel('disk',5));% 
%     final = medfilt2(final, [3 3]); %filtering 
%     final = bwareaopen(final,80); %keep only areas >= 60 pixels 
    [~,num]=bwlabel(final,8); 
    subplot(4,6,[13 14 19 20], 'replace'); 
    imshow(final); 
    subplot(4,6,[3 4 5 6], 'replace');  
    if num ==0 
  
imshow('F:\SPKT\DATN\CODE\Data\Devices\OFF.jpg','InitialMagnification','
fit'); 
    elseif num ==1  
        
imshow('F:\SPKT\DATN\CODE\Data\Devices\1.jpg','InitialMagnification','fit')
; 
    elseif num ==2 
        
imshow('F:\SPKT\DATN\CODE\Data\Devices\2.jpg','InitialMagnification','fit')
;     
    elseif num ==3 
        
imshow('F:\SPKT\DATN\CODE\Data\Devices\3.jpg','InitialMagnification','fit')
;     
    elseif num ==4 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             81 
        
imshow('F:\SPKT\DATN\CODE\Data\Devices\4.jpg','InitialMagnification','fit')
;     
    elseif num ==5 
        
imshow('F:\SPKT\DATN\CODE\Data\Devices\5.jpg','InitialMagnification','fit')
;               
    else  
         
imshow('F:\SPKT\DATN\CODE\Data\Devices\error.jpg','InitialMagnification','
fit');  
    end 
else 
    num=0; 
    final = zeros(size(out)); 
    subplot(4,6,[13 14 19 20], 'replace'); 
    imshow(out); 
    subplot(4,6,[3 4 5 6], 'replace'); 
  
imshow('F:\SPKT\DATN\CODE\Data\Devices\OFF.jpg','InitialMagnification','
fit'); 
end 
run uart.m; 
    %----------------------------------------------- 
hold off; 
6. Chương trình con hiển thị ảnh qua các giai đoạn xử lý 
I = img_orig; 
% I = imread('anhsudung.jpg'); 
I = double(I); 
im = zeros(size(I));  
 
im(:,:,1)=I(:,:,1).*bn;    
im(:,:,2)=I(:,:,2).*bn;  
im(:,:,3)=I(:,:,3).*bn;  
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             82 
figure; 
subplot(2,2,1, 'replace'); 
imshow(img_orig); 
title('Original Image'); 
subplot(2,2,2, 'replace'); 
imshow(uint8(im)); 
title('Skin Detection'); 
subplot(2,2,3, 'replace'); 
imshow(out); 
title('Hand Extraction'); 
subplot(2,2,4, 'replace'); 
imshow(final); 
title('Finger Extraction'); 
7. Chương trình con hiển thị thông tin tác giả 
%---------- Tao figure ------------------- 
 
  
set(figure,'defaultuicontrolunit','normalized',... 
            'menubar','none',... 
            'name', 'About',... 
            'numbertitle', 'off', ... 
            'Color', [0.925 0.914 0.847],... 
            'position', [280 90 300 400],...  
            'visible','off'); 
do_an = uicontrol(gcf,... 
                'style', 'text',... 
                'string', '§å ¸n tèt nghiÖp',...  
                'position', [0.2 0.85 0.6 0.06],... % x y w h 
                'fontname', '.vnTime',...  
                'fontsize', 18,... 
                'foregroundcolor', 'b',... 
                'fontweight', 'bold', ... 
                'background', [0.925 0.914 0.847]);          
de_tai = uicontrol(gcf,... 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             83 
                'style', 'text',... 
                'string', '§Ò tµi:',...  
                'position', [0.25 0.72 0.5 0.05],... % x y w h 
                'fontname', '.vnTime',...  
                'fontsize', 12,... 
                'foregroundcolor', 'b',... 
                'fontweight', 'bold', ... 
                'background', [0.925 0.914 0.847]);     
ten_de_tai = uicontrol(gcf,... 
                'style', 'text',... 
                'string', {'§iÒu khiÒn thiÕt bÞ b»ng cö chØ tay',... 
                'th«ng qua xö lý ¶nh'},...  
                'position', [0.04 0.6 0.9 0.1],... % x y w h 
                'fontname', '.vnTime',...  
                'fontsize', 12,... 
                'foregroundcolor', 'b',... 
                'fontweight', 'bold', ... 
                'background', [0.925 0.914 0.847]);        
tac_gia = uicontrol(gcf,... 
                'style', 'text',... 
                'string', 'T¸c gi¶:',... 
                'position', [0.04 0.4 0.9 0.1],... % x y w h 
                'fontname', '.vnTime',...  
                'fontsize', 12,... 
                'foregroundcolor', 'b',... 
                'fontweight', 'bold', ... 
                'background', [0.925 0.914 0.847]); 
             
sang = uicontrol(gcf,... 
                'style', 'text',... 
                'string', 'NguyÔn H÷u S¸ng  12141191',... 
                'position', [0.05 0.34 0.9 0.1],... % x y w h 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             84 
                'fontname', '.vnTime',...  
                'fontsize', 12,... 
                'foregroundcolor', 'b',... 
                'fontweight', 'bold', ... 
                'background', [0.925 0.914 0.847]); 
        chi = uicontrol(gcf,... 
                'style', 'text',... 
                'string', 'Tõ ThÞ Kim Chi  12141022',... 
                'position', [0.05 0.28 0.9 0.1],... % x y w h 
                'fontname', '.vnTime',...  
                'fontsize', 12,... 
                'foregroundcolor', 'b',... 
                'fontweight', 'bold', ... 
                'background', [0.925 0.914 0.847]);   
            thoi_gian = uicontrol(gcf,... 
                'style', 'text',... 
                'string', '7/2016',...  
                'position', [0.04 0.02 0.9 0.1],... % x y w h 
                'fontname', '.vnTime',...  
                'fontsize', 12,... 
                'foregroundcolor', 'b',... 
                'fontweight', 'bold', ... 
                'background', [0.925 0.914 0.847]);              
       movegui(gcf,'center') 
set(gcf, 'visible','on'); 
clc; 
%--------------------------- 
8. Chương trình con thoát chương trình 
% THOAT 
button = questdlg('Do you want to exit program?', ... 
'Confirmation', 'Yes', 'No', 'Yes'); 
if strcmp(button,'Yes')  
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             85 
    close all; 
    clear all; 
    clc; 
end 
9. Chương trình con giao tiếp COM-DB9 
    disp('Downloading data ...') 
    str = num2str(num); 
    com = serial('COM10','BaudRate',9600); 
    %----------------MO CONG COM ----------------- 
    fopen(com); 
    %--------------- TRUYEN DU LIEU -------------- 
    fprintf(com, '%c', str); 
    %--------------- DONG CONG TRUYEN------------- 
    fclose(com);  
    delete(com); 
    clear com; 
    disp('Download complete sucessfully!') 
10. 
Chương trình con cho biết tiến độ thực hiện 
wbar = waitbar(0,'Please wait...'); 
steps = 100; 
for n = 1:steps 
    % computations take place here 
    waitbar(n / steps) 
end 
close(wbar); 
 
11. 
 Chương trình mạch điều khiển. 
Code chương trình nhận tín hiệu điều khiển từ phần mềm trên máy tính, xử lý, điều 
khiển sáng hoặc tắt LED trên mạch được trình bày bên dưới: 
#include <16f887.h> 
#FUSES INTRC_IO 
#use DELAY(clock=4M)  
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             86 
#use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8, stop=1)  
#include <string.h> 
unsigned char k; 
#int_RDA 
void RDA_isr(void)  
{ 
   k=fgetc(); 
   if(k != null) 
   clear_interrupt(int_RDA);   
} 
void main() 
{ 
   SET_TRIS_A(0x00); 
   OUTPUT_A(0xFF); 
   DELAY_MS(300); 
   OUTPUT_A(0x00); 
   DELAY_MS(200); 
   OUTPUT_A(0xFF); 
   DELAY_MS(300); 
   OUTPUT_A(0x00); 
   enable_interrupts(INT_RDA); 
   enable_interrupts(GLOBAL); 
   k='0'; 
   while(true) 
   { 
      if(k=='1')          OUTPUT_A(0x10) ;  // 0001 0000 
      else if(k == '2') OUTPUT_A(0x08) ;  // 0000 1000 
      else if(k == '3') OUTPUT_A(0x04) ;  // 0000 0100 
      else if(k == '4') OUTPUT_A(0x02) ;  // 0000 0010 
      else if(k == '5') OUTPUT_A(0x01) ;  // 0000 0001 
      else                   OUTPUT_A(0x00) ;  
   } 
} 
//----------- End of file ------------ 
 
BỘ MÔN ĐIỆN TỬ CÔNG NGHIỆP                                                             87 
 
 
 
S
K
L
0
0
2
1
5
4
